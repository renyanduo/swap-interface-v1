[{"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/index.tsx":"1","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/i18n.ts":"2","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/style/Global.ts":"3","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/application/updater.ts":"4","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/lists/updater.ts":"5","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/Providers.tsx":"6","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/App.tsx":"7","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/multicall/updater.tsx":"8","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/transactions/updater.tsx":"9","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useIsWindowVisible.ts":"10","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useDebounce.ts":"11","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/application/actions.ts":"12","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useInterval.ts":"13","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useFetchListCallback.ts":"14","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/lists/actions.ts":"15","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/ToastListener/index.tsx":"16","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/LanguageContext.ts":"17","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useGetDocumentTitlePrice.ts":"18","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/TranslationsContext.ts":"19","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/getLibrary.ts":"20","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/chunkArray.ts":"21","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/retry.ts":"22","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/multicall/actions.ts":"23","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useContract.ts":"24","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/application/hooks.ts":"25","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/constants/localisation/languageCodes.ts":"26","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/transactions/actions.ts":"27","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/ThemeContext.tsx":"28","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/AddLiquidity/redirects.tsx":"29","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/RemoveLiquidity/redirects.tsx":"30","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/Swap/redirects.tsx":"31","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/index.ts":"32","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/resolveENSContentHash.ts":"33","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/getTokenList.ts":"34","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/index.ts":"35","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/constants/index.ts":"36","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/constants/abis/erc20.ts":"37","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/AddLiquidity/index.tsx":"38","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/RemoveLiquidity/index.tsx":"39","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Web3ReactManager/index.tsx":"40","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Popups/index.tsx":"41","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/PoolFinder/index.tsx":"42","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/Migration/index.tsx":"43","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/Pool/index.tsx":"44","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/Swap/index.tsx":"45","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/AppHeader/index.jsx":"46","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/AppFooter/index.jsx":"47","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/connectors/index.ts":"48","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/theme.ts":"49","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/index.ts":"50","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/constants/multicall/index.ts":"51","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useToast.ts":"52","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/useGetCakeBusdLpPrice.ts":"53","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/multicall/reducer.ts":"54","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/lists/reducer.ts":"55","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/transactions/reducer.ts":"56","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/swap/reducer.ts":"57","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/burn/reducer.ts":"58","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/mint/reducer.ts":"59","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/user/reducer.ts":"60","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/AppBody.tsx":"61","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/connectors/NetworkConnector.ts":"62","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/toasts/index.ts":"63","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/constants/lists.ts":"64","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/swap/actions.ts":"65","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/burn/actions.ts":"66","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/global/actions.ts":"67","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/mint/actions.ts":"68","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useI18n.ts":"69","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/prices.ts":"70","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/maxAmountSpend.ts":"71","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/user/actions.ts":"72","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/PageHeader/SettingsModal.tsx":"73","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/user/hooks.tsx":"74","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/actions.ts":"75","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/Tokens.ts":"76","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/swap/hooks.ts":"77","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/V2ExchangeRedirectModal/index.tsx":"78","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/ConnectWalletButton/index.tsx":"79","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Shared/index.tsx":"80","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Loader/index.tsx":"81","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/PageHeader/TransactionDeadlineSetting.tsx":"82","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/PageHeader/SlippageToleranceSetting.tsx":"83","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/multicall/hooks.ts":"84","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/Trades.ts":"85","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useParsedQueryString.ts":"86","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useENS.ts":"87","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/wallet/hooks.ts":"88","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/lists/hooks.ts":"89","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/translateTextHelpers.ts":"90","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Shared/Common.tsx":"91","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/wrappedCurrency.ts":"92","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useENSName.ts":"93","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useENSAddress.ts":"94","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/data/Reserves.ts":"95","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useAuth.ts":"96","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/QuestionHelper/index.tsx":"97","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/NewButton/index.tsx":"98","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/isZero.ts":"99","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/util/index.js":"100","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/WalletOption/index.jsx":"101","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/ConnectWallet/index.jsx":"102","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/ConnectButton/index.jsx":"103","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Tooltip/index.tsx":"104","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/util/pool/Pi.js":"105","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/util/pool/Balance.js":"106","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Popover/index.tsx":"107","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useWrapCallback.ts":"108","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useSwapCallback.ts":"109","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useApproveCallback.ts":"110","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/transactions/hooks.tsx":"111","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/data/Allowances.ts":"112","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/Migration/FAQ.tsx":"113","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/Migration/SecondCard.tsx":"114","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/Migration/FirstCard.tsx":"115","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/Pool/styleds.tsx":"116","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/burn/hooks.ts":"117","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/useDebouncedChangeHandler.ts":"118","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/currencyId.ts":"119","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Popups/PopupItem.tsx":"120","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/swap/styleds.tsx":"121","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Container.tsx":"122","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/swap/confirmPriceImpactWithoutFee.ts":"123","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/AddLiquidity/PoolPriceBar.tsx":"124","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/AddLiquidity/ConfirmAddModalBottom.tsx":"125","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/swap/AdvancedSwapDetailsDropdown.tsx":"126","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/swap/ConfirmSwapModal.tsx":"127","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/Migration/config.ts":"128","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/application/reducer.ts":"129","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/uriToHttp.ts":"130","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/parseENSAddress.ts":"131","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/contenthashToUri.ts":"132","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/data/TotalSupply.ts":"133","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SearchModal/CurrencySearchModal.tsx":"134","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Column/index.tsx":"135","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/CurrencyLogo/index.tsx":"136","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Slider/index.tsx":"137","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Popups/TransactionPopup.tsx":"138","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Row/index.tsx":"139","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/NavigationTabs/index.tsx":"140","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/PositionCard/index.tsx":"141","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/TransactionConfirmationModal/index.tsx":"142","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/DoubleLogo/index.tsx":"143","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/CurrencyInputPanel/index.tsx":"144","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Popups/ListUpdatePopup.tsx":"145","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/ProgressSteps/index.tsx":"146","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SafeMoonWarningModal/index.tsx":"147","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/TokenWarningModal/index.tsx":"148","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SyrupWarningModal/index.tsx":"149","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Card/index.tsx":"150","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/AddressInputPanel/index.tsx":"151","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useLast.ts":"152","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/mint/hooks.ts":"153","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/swap/AdvancedSwapDetails.tsx":"154","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/swap/SwapModalHeader.tsx":"155","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/swap/SwapModalFooter.tsx":"156","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/CardNav/index.tsx":"157","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SearchModal/ListSelect.tsx":"158","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SearchModal/CurrencySearch.tsx":"159","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useHttpLocations.ts":"160","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/pancake/CoinLogo.ts":"161","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/listVersionLabel.ts":"162","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/TransactionConfirmationModal/TransactionErrorContent.tsx":"163","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/TransactionConfirmationModal/TransactionConfirmationModal.tsx":"164","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/TransactionConfirmationModal/ConfirmationModalContent.tsx":"165","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/TransactionConfirmationModal/ConfirmationPendingContent.tsx":"166","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/TransactionConfirmationModal/TransactionSubmittedContent.tsx":"167","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Pane/index.tsx":"168","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/FoldableText/index.tsx":"169","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/swap/SwapRoute.tsx":"170","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/swap/FormattedPriceImpact.tsx":"171","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useToggle.ts":"172","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Modal/index.tsx":"173","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SearchModal/sorting.ts":"174","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SearchModal/filtering.ts":"175","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useENSContentHash.ts":"176","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useOnClickOutside.tsx":"177","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SearchModal/SortButton.tsx":"178","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SearchModal/styleds.tsx":"179","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SearchModal/CommonBases.tsx":"180","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SearchModal/CurrencyList.tsx":"181","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Logo/index.tsx":"182","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/NumericalInput/index.tsx":"183","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/TransactionConfirmationModal/helpers.tsx":"184","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/ListLogo/index.tsx":"185"},{"size":1117,"mtime":1659018884034,"results":"186","hashOfConfig":"187"},{"size":509,"mtime":1659018884034,"results":"188","hashOfConfig":"187"},{"size":353,"mtime":1659018884061,"results":"189","hashOfConfig":"187"},{"size":1895,"mtime":1659018884047,"results":"190","hashOfConfig":"187"},{"size":3614,"mtime":1659018884050,"results":"191","hashOfConfig":"187"},{"size":859,"mtime":1659018883987,"results":"192","hashOfConfig":"187"},{"size":5866,"mtime":1659018884037,"results":"193","hashOfConfig":"187"},{"size":7636,"mtime":1659018884054,"results":"194","hashOfConfig":"187"},{"size":3043,"mtime":1659018884059,"results":"195","hashOfConfig":"187"},{"size":786,"mtime":1659018884032,"results":"196","hashOfConfig":"187"},{"size":711,"mtime":1659018884029,"results":"197","hashOfConfig":"187"},{"size":844,"mtime":1659018884046,"results":"198","hashOfConfig":"187"},{"size":642,"mtime":1659018884031,"results":"199","hashOfConfig":"187"},{"size":1908,"mtime":1659918593874,"results":"200","hashOfConfig":"187"},{"size":982,"mtime":1659018884049,"results":"201","hashOfConfig":"187"},{"size":502,"mtime":1659018884011,"results":"202","hashOfConfig":"187"},{"size":725,"mtime":1659018884026,"results":"203","hashOfConfig":"187"},{"size":589,"mtime":1659018884030,"results":"204","hashOfConfig":"187"},{"size":420,"mtime":1659018884027,"results":"205","hashOfConfig":"187"},{"size":221,"mtime":1659018884100,"results":"206","hashOfConfig":"187"},{"size":523,"mtime":1659018884099,"results":"207","hashOfConfig":"187"},{"size":1858,"mtime":1659018884102,"results":"208","hashOfConfig":"187"},{"size":1683,"mtime":1659018884052,"results":"209","hashOfConfig":"187"},{"size":2741,"mtime":1659918593873,"results":"210","hashOfConfig":"187"},{"size":1874,"mtime":1659018884046,"results":"211","hashOfConfig":"187"},{"size":1884,"mtime":1659018884023,"results":"212","hashOfConfig":"187"},{"size":930,"mtime":1659918593880,"results":"213","hashOfConfig":"187"},{"size":1028,"mtime":1659018883988,"results":"214","hashOfConfig":"187"},{"size":924,"mtime":1659018884036,"results":"215","hashOfConfig":"187"},{"size":562,"mtime":1659018884041,"results":"216","hashOfConfig":"187"},{"size":322,"mtime":1659018884042,"results":"217","hashOfConfig":"187"},{"size":3118,"mtime":1659918593873,"results":"218","hashOfConfig":"187"},{"size":1694,"mtime":1659018884102,"results":"219","hashOfConfig":"187"},{"size":2728,"mtime":1659018884100,"results":"220","hashOfConfig":"187"},{"size":1343,"mtime":1659018884049,"results":"221","hashOfConfig":"187"},{"size":3834,"mtime":1659918593870,"results":"222","hashOfConfig":"187"},{"size":259,"mtime":1659018884022,"results":"223","hashOfConfig":"187"},{"size":17797,"mtime":1659918593876,"results":"224","hashOfConfig":"187"},{"size":27762,"mtime":1659918593878,"results":"225","hashOfConfig":"187"},{"size":2301,"mtime":1659018884016,"results":"226","hashOfConfig":"187"},{"size":1785,"mtime":1659018884004,"results":"227","hashOfConfig":"187"},{"size":6881,"mtime":1659918593877,"results":"228","hashOfConfig":"187"},{"size":2598,"mtime":1659018884038,"results":"229","hashOfConfig":"187"},{"size":6584,"mtime":1659918593877,"results":"230","hashOfConfig":"187"},{"size":24350,"mtime":1659918593878,"results":"231","hashOfConfig":"187"},{"size":4065,"mtime":1660038487313,"results":"232","hashOfConfig":"187"},{"size":1272,"mtime":1659018883991,"results":"233","hashOfConfig":"187"},{"size":1944,"mtime":1659918593869,"results":"234","hashOfConfig":"187"},{"size":456,"mtime":1659018884103,"results":"235","hashOfConfig":"187"},{"size":3821,"mtime":1659918593883,"results":"236","hashOfConfig":"187"},{"size":351,"mtime":1659918593870,"results":"237","hashOfConfig":"187"},{"size":1275,"mtime":1659018884033,"results":"238","hashOfConfig":"187"},{"size":722,"mtime":1659018884103,"results":"239","hashOfConfig":"187"},{"size":3940,"mtime":1659018884053,"results":"240","hashOfConfig":"187"},{"size":5332,"mtime":1659018884050,"results":"241","hashOfConfig":"187"},{"size":1901,"mtime":1659018884058,"results":"242","hashOfConfig":"187"},{"size":2459,"mtime":1659018884056,"results":"243","hashOfConfig":"187"},{"size":525,"mtime":1659018884048,"results":"244","hashOfConfig":"187"},{"size":1272,"mtime":1659018884051,"results":"245","hashOfConfig":"187"},{"size":4789,"mtime":1659018884060,"results":"246","hashOfConfig":"187"},{"size":544,"mtime":1659018884037,"results":"247","hashOfConfig":"187"},{"size":5646,"mtime":1659018884020,"results":"248","hashOfConfig":"187"},{"size":1153,"mtime":1659018884057,"results":"249","hashOfConfig":"187"},{"size":125,"mtime":1659018884023,"results":"250","hashOfConfig":"187"},{"size":670,"mtime":1659018884054,"results":"251","hashOfConfig":"187"},{"size":297,"mtime":1659018884048,"results":"252","hashOfConfig":"187"},{"size":287,"mtime":1659018884048,"results":"253","hashOfConfig":"187"},{"size":321,"mtime":1659018884051,"results":"254","hashOfConfig":"187"},{"size":846,"mtime":1659018884031,"results":"255","hashOfConfig":"187"},{"size":3200,"mtime":1659918593884,"results":"256","hashOfConfig":"187"},{"size":647,"mtime":1659918593884,"results":"257","hashOfConfig":"187"},{"size":1429,"mtime":1659018884059,"results":"258","hashOfConfig":"187"},{"size":885,"mtime":1659018884001,"results":"259","hashOfConfig":"187"},{"size":8278,"mtime":1659918593881,"results":"260","hashOfConfig":"187"},{"size":46,"mtime":1659018884045,"results":"261","hashOfConfig":"187"},{"size":4000,"mtime":1659918593872,"results":"262","hashOfConfig":"187"},{"size":9701,"mtime":1659918593880,"results":"263","hashOfConfig":"187"},{"size":2503,"mtime":1659018884014,"results":"264","hashOfConfig":"187"},{"size":844,"mtime":1659018883994,"results":"265","hashOfConfig":"187"},{"size":25,"mtime":1659018884009,"results":"266","hashOfConfig":"187"},{"size":1094,"mtime":1659018883997,"results":"267","hashOfConfig":"187"},{"size":2040,"mtime":1659018884001,"results":"268","hashOfConfig":"187"},{"size":3875,"mtime":1659018884001,"results":"269","hashOfConfig":"187"},{"size":7869,"mtime":1659018884052,"results":"270","hashOfConfig":"187"},{"size":4370,"mtime":1659918593872,"results":"271","hashOfConfig":"187"},{"size":359,"mtime":1659018884032,"results":"272","hashOfConfig":"187"},{"size":765,"mtime":1659018884029,"results":"273","hashOfConfig":"187"},{"size":4700,"mtime":1659918593882,"results":"274","hashOfConfig":"187"},{"size":3651,"mtime":1659918593879,"results":"275","hashOfConfig":"187"},{"size":1408,"mtime":1659018884103,"results":"276","hashOfConfig":"187"},{"size":2290,"mtime":1659018884009,"results":"277","hashOfConfig":"187"},{"size":847,"mtime":1659918593885,"results":"278","hashOfConfig":"187"},{"size":1596,"mtime":1659018884030,"results":"279","hashOfConfig":"187"},{"size":1394,"mtime":1659018884029,"results":"280","hashOfConfig":"187"},{"size":2073,"mtime":1659918593871,"results":"281","hashOfConfig":"187"},{"size":2076,"mtime":1659018884028,"results":"282","hashOfConfig":"187"},{"size":1073,"mtime":1659018884005,"results":"283","hashOfConfig":"187"},{"size":514,"mtime":1659018883999,"results":"284","hashOfConfig":"187"},{"size":185,"mtime":1659018884101,"results":"285","hashOfConfig":"187"},{"size":1905,"mtime":1659018884082,"results":"286","hashOfConfig":"187"},{"size":3429,"mtime":1659018884016,"results":"287","hashOfConfig":"187"},{"size":764,"mtime":1659018883994,"results":"288","hashOfConfig":"187"},{"size":734,"mtime":1659018883993,"results":"289","hashOfConfig":"187"},{"size":902,"mtime":1659018884012,"results":"290","hashOfConfig":"187"},{"size":4491,"mtime":1659541924838,"results":"291","hashOfConfig":"187"},{"size":898,"mtime":1659541924837,"results":"292","hashOfConfig":"187"},{"size":3100,"mtime":1659018884003,"results":"293","hashOfConfig":"187"},{"size":3135,"mtime":1659918593875,"results":"294","hashOfConfig":"187"},{"size":8771,"mtime":1659918593874,"results":"295","hashOfConfig":"187"},{"size":3980,"mtime":1659918593873,"results":"296","hashOfConfig":"187"},{"size":2798,"mtime":1659018884058,"results":"297","hashOfConfig":"187"},{"size":696,"mtime":1659918593871,"results":"298","hashOfConfig":"187"},{"size":1591,"mtime":1659018884037,"results":"299","hashOfConfig":"187"},{"size":3872,"mtime":1659918593876,"results":"300","hashOfConfig":"187"},{"size":3997,"mtime":1659018884038,"results":"301","hashOfConfig":"187"},{"size":591,"mtime":1659018884039,"results":"302","hashOfConfig":"187"},{"size":5293,"mtime":1659918593879,"results":"303","hashOfConfig":"187"},{"size":1143,"mtime":1659018884103,"results":"304","hashOfConfig":"187"},{"size":345,"mtime":1659918593882,"results":"305","hashOfConfig":"187"},{"size":2537,"mtime":1659918593862,"results":"306","hashOfConfig":"187"},{"size":3230,"mtime":1659018884020,"results":"307","hashOfConfig":"187"},{"size":870,"mtime":1659018883994,"results":"308","hashOfConfig":"187"},{"size":991,"mtime":1659918593869,"results":"309","hashOfConfig":"187"},{"size":1664,"mtime":1659918593875,"results":"310","hashOfConfig":"187"},{"size":2316,"mtime":1659918593875,"results":"311","hashOfConfig":"187"},{"size":1084,"mtime":1659018884017,"results":"312","hashOfConfig":"187"},{"size":3218,"mtime":1659918593866,"results":"313","hashOfConfig":"187"},{"size":3022,"mtime":1659018884038,"results":"314","hashOfConfig":"187"},{"size":1714,"mtime":1659018884047,"results":"315","hashOfConfig":"187"},{"size":775,"mtime":1659018884103,"results":"316","hashOfConfig":"187"},{"size":360,"mtime":1659018884102,"results":"317","hashOfConfig":"187"},{"size":1418,"mtime":1659018884100,"results":"318","hashOfConfig":"187"},{"size":704,"mtime":1659918593871,"results":"319","hashOfConfig":"187"},{"size":2358,"mtime":1659918593864,"results":"320","hashOfConfig":"187"},{"size":647,"mtime":1659018883993,"results":"321","hashOfConfig":"187"},{"size":1957,"mtime":1659918593861,"results":"322","hashOfConfig":"187"},{"size":3207,"mtime":1659018884010,"results":"323","hashOfConfig":"187"},{"size":1225,"mtime":1659018884004,"results":"324","hashOfConfig":"187"},{"size":999,"mtime":1659018884006,"results":"325","hashOfConfig":"187"},{"size":2130,"mtime":1659018883999,"results":"326","hashOfConfig":"187"},{"size":8726,"mtime":1659918593862,"results":"327","hashOfConfig":"187"},{"size":452,"mtime":1659018884014,"results":"328","hashOfConfig":"187"},{"size":1107,"mtime":1659918593861,"results":"329","hashOfConfig":"187"},{"size":6516,"mtime":1659918593861,"results":"330","hashOfConfig":"187"},{"size":3551,"mtime":1659018884003,"results":"331","hashOfConfig":"187"},{"size":2449,"mtime":1659018884005,"results":"332","hashOfConfig":"187"},{"size":2631,"mtime":1659018884006,"results":"333","hashOfConfig":"187"},{"size":5372,"mtime":1659918593865,"results":"334","hashOfConfig":"187"},{"size":2729,"mtime":1659018884010,"results":"335","hashOfConfig":"187"},{"size":565,"mtime":1659018883992,"results":"336","hashOfConfig":"187"},{"size":3797,"mtime":1659018883991,"results":"337","hashOfConfig":"187"},{"size":1024,"mtime":1659018884032,"results":"338","hashOfConfig":"187"},{"size":7128,"mtime":1659918593880,"results":"339","hashOfConfig":"187"},{"size":4095,"mtime":1659918593866,"results":"340","hashOfConfig":"187"},{"size":4755,"mtime":1659918593868,"results":"341","hashOfConfig":"187"},{"size":4684,"mtime":1659918593867,"results":"342","hashOfConfig":"187"},{"size":1065,"mtime":1659018883993,"results":"343","hashOfConfig":"187"},{"size":10799,"mtime":1659018884008,"results":"344","hashOfConfig":"187"},{"size":7741,"mtime":1659918593864,"results":"345","hashOfConfig":"187"},{"size":717,"mtime":1659018884031,"results":"346","hashOfConfig":"187"},{"size":280,"mtime":1659018884016,"results":"347","hashOfConfig":"187"},{"size":182,"mtime":1659018884101,"results":"348","hashOfConfig":"187"},{"size":1240,"mtime":1659018884013,"results":"349","hashOfConfig":"187"},{"size":1079,"mtime":1659018884013,"results":"350","hashOfConfig":"187"},{"size":656,"mtime":1659018884012,"results":"351","hashOfConfig":"187"},{"size":1253,"mtime":1659018884012,"results":"352","hashOfConfig":"187"},{"size":1401,"mtime":1659918593865,"results":"353","hashOfConfig":"187"},{"size":192,"mtime":1659018884002,"results":"354","hashOfConfig":"187"},{"size":1609,"mtime":1659018883996,"results":"355","hashOfConfig":"187"},{"size":1271,"mtime":1659918593868,"results":"356","hashOfConfig":"187"},{"size":574,"mtime":1659918593867,"results":"357","hashOfConfig":"187"},{"size":272,"mtime":1659018884033,"results":"358","hashOfConfig":"187"},{"size":3206,"mtime":1659018883999,"results":"359","hashOfConfig":"187"},{"size":1679,"mtime":1659918593865,"results":"360","hashOfConfig":"187"},{"size":972,"mtime":1659918593864,"results":"361","hashOfConfig":"187"},{"size":1245,"mtime":1659018884029,"results":"362","hashOfConfig":"187"},{"size":741,"mtime":1659018884032,"results":"363","hashOfConfig":"187"},{"size":720,"mtime":1659018884008,"results":"364","hashOfConfig":"187"},{"size":1709,"mtime":1659018884009,"results":"365","hashOfConfig":"187"},{"size":2340,"mtime":1659918593863,"results":"366","hashOfConfig":"187"},{"size":6258,"mtime":1659918593863,"results":"367","hashOfConfig":"187"},{"size":781,"mtime":1659018883998,"results":"368","hashOfConfig":"187"},{"size":2134,"mtime":1659018884000,"results":"369","hashOfConfig":"187"},{"size":1151,"mtime":1659018884013,"results":"370","hashOfConfig":"187"},{"size":574,"mtime":1659018883996,"results":"371","hashOfConfig":"187"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},"gkdxrz",{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"374"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"374"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"374"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"374"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"374"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"471"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"471"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"374"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"471"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"471"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"471"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"471"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"471"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"471"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635","usedDeprecatedRules":"374"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698","usedDeprecatedRules":"374"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"374"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/index.tsx",[],["758","759","760","761","762"],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/i18n.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/style/Global.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/application/updater.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/lists/updater.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/Providers.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/App.tsx",["763","764","765","766","767"],"import React, { Suspense, useEffect, useState } from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Credentials, StringTranslations } from '@crowdin/crowdin-api-client'\nimport { LangType, useModal } from '@pancakeswap-libs/uikit'\nimport VersionBar from 'components/VersionBar'\nimport Popups from '../components/Popups'\nimport Web3ReactManager from '../components/Web3ReactManager'\nimport { RedirectDuplicateTokenIds, RedirectOldAddLiquidityPathStructure } from './AddLiquidity/redirects'\nimport { RedirectOldRemoveLiquidityPathStructure } from './RemoveLiquidity/redirects'\nimport AddLiquidity from './AddLiquidity'\nimport Pool from './Pool'\nimport PoolFinder from './PoolFinder'\nimport RemoveLiquidity from './RemoveLiquidity'\nimport Swap from './Swap'\nimport Migration from './Migration'\nimport { RedirectPathToSwapOnly } from './Swap/redirects'\nimport { EN, allLanguages } from '../constants/localisation/languageCodes'\nimport { LanguageContext } from '../hooks/LanguageContext'\nimport { TranslationsContext } from '../hooks/TranslationsContext'\nimport UseV2ExchangeModal from '../components/UseV2ExchangeModal'\nimport AppHeader from '../components/AppHeader'\nimport AppFooter from '../components/AppFooter'\n\nimport Menu from '../components/Menu'\nimport useGetDocumentTitlePrice from '../hooks/useGetDocumentTitlePrice'\n\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: flex-start;\n  overflow-x: hidden;\n  background: #FEFAFC;\n`\n\nconst BodyWrapper = styled.div`\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 1;\n  margin: 0 auto;\n  width: 100%;\n`\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport default function App() {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(undefined)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(undefined)\n  const [translations, setTranslations] = useState<Array<any>>([])\n  const apiKey = `${process.env.REACT_APP_CROWDIN_APIKEY}`\n  const projectId = parseInt(`${process.env.REACT_APP_CROWDIN_PROJECTID}`)\n  const fileId = 6\n  const credentials: Credentials = {\n    token: apiKey,\n  }\n\n  const stringTranslationsApi = new StringTranslations(credentials)\n\n  const [hasSeenModal, setHasSeenModal] = useState(false)\n  // const [onPresentUseV2ExchangeModal] = useModal(<UseV2ExchangeModal />)\n\n  useEffect(() => {\n    const showModal = () => {\n      // onPresentUseV2ExchangeModal()\n      setHasSeenModal(true)\n    }\n    if (!hasSeenModal) {\n      showModal()\n    }\n  }, [hasSeenModal])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  const fetchTranslationsForSelectedLanguage = async () => {\n    stringTranslationsApi\n      .listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n      .then((translationApiResponse) => {\n        if (translationApiResponse.data.length < 1) {\n          setTranslations(['error'])\n        } else {\n          setTranslations(translationApiResponse.data)\n        }\n      })\n      .then(() => setTranslatedLanguage(selectedLanguage))\n      .catch((error) => {\n        setTranslations(['error'])\n        console.error(error)\n      })\n  }\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      // fetchTranslationsForSelectedLanguage()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedLanguage])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  useGetDocumentTitlePrice()\n\n  return (\n    <Suspense fallback={null}>\n      <HashRouter>\n        <AppWrapper>\n          <LanguageContext.Provider\n            value={{\n              selectedLanguage,\n              setSelectedLanguage: handleLanguageSelect,\n              translatedLanguage,\n              setTranslatedLanguage,\n            }}\n          >\n            <TranslationsContext.Provider value={{ translations, setTranslations }}>\n              {/* <Menu> */}\n                <BodyWrapper>\n                  <Popups />\n                  <AppHeader />\n                  <Web3ReactManager>\n                    <Switch>\n                      <Route exact strict path=\"/swap\" component={Swap} />\n                      <Route exact strict path=\"/find\" component={PoolFinder} />\n                      <Route exact strict path=\"/pool\" component={Pool} />\n                      <Route exact path=\"/add\" component={AddLiquidity} />\n                      <Route exact path=\"/migrate\" component={Migration} />\n                      <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n                      {/* Redirection: These old routes are still used in the code base */}\n                      <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n                      <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n                      <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n\n                      <Route component={RedirectPathToSwapOnly} />\n                    </Switch>\n                  </Web3ReactManager>\n                  <AppFooter />\n                </BodyWrapper>\n              {/* </Menu> */}\n              {/* <VersionBar /> */}\n            </TranslationsContext.Provider>\n          </LanguageContext.Provider>\n        </AppWrapper>\n      </HashRouter>\n    </Suspense>\n  )\n}\n","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/multicall/updater.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/transactions/updater.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useIsWindowVisible.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useDebounce.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/application/actions.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useInterval.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useFetchListCallback.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/lists/actions.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/ToastListener/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/LanguageContext.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useGetDocumentTitlePrice.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/TranslationsContext.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/getLibrary.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/chunkArray.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/retry.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/multicall/actions.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useContract.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/application/hooks.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/constants/localisation/languageCodes.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/transactions/actions.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/ThemeContext.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/AddLiquidity/redirects.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/RemoveLiquidity/redirects.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/Swap/redirects.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/index.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/resolveENSContentHash.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/getTokenList.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/index.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/constants/index.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/constants/abis/erc20.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/AddLiquidity/index.tsx",["768","769"],"import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@paiswaptest/sdk'\nimport { Button, CardBody, AddIcon, Text as UIKitText } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { LightCard } from 'components/Card'\nimport { AutoColumn, ColumnCenter } from 'components/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from 'components/TransactionConfirmationModal'\nimport CardNav from 'components/CardNav'\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport { AddRemoveTabs } from 'components/NavigationTabs'\nimport { MinimalPositionCard } from 'components/PositionCard'\nimport Row, { RowBetween, RowFlat } from 'components/Row'\nimport NewButton from 'components/NewButton'\n\nimport { PairState } from 'data/Reserves'\nimport { useActiveWeb3React } from 'hooks'\nimport { useCurrency } from 'hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\nimport { Field } from 'state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from 'state/mint/hooks'\n\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport { useIsExpertMode, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from 'utils'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { currencyId } from 'utils/currencyId'\nimport Pane from 'components/Pane'\nimport Container from 'components/Container'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport useI18n from 'hooks/useI18n'\nimport AppBody from '../AppBody'\nimport { Dots, Wrapper } from '../Pool/styleds'\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom'\nimport { PoolPriceBar } from './PoolPriceBar'\nimport { ROUTER_ADDRESS } from '../../constants'\nimport './index.scss'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const TranslateString = useI18n()\n\n  const oneCurrencyIsWBNB = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId])))\n  )\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const [deadline] = useUserDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {}\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {}\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    const deadlineFromNow = Math.ceil(Date.now() / 1000) + deadline\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsBNB = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsBNB ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsBNB ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsBNB ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsBNB ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadlineFromNow,\n      ]\n      value = BigNumber.from((tokenBIsBNB ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadlineFromNow,\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    // const aa = await estimate(...args, value ? { value } : {})\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        })\n      )\n      .catch((e) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (e?.code !== 4001) {\n          console.error(e)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <AutoColumn gap=\"20px\">\n        <LightCard mt=\"20px\" borderRadius=\"20px\">\n          <RowFlat>\n            <UIKitText fontSize=\"48px\" mr=\"8px\">\n              {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n            </UIKitText>\n            <DoubleCurrencyLogo\n              currency0={currencies[Field.CURRENCY_A]}\n              currency1={currencies[Field.CURRENCY_B]}\n              size={30}\n            />\n          </RowFlat>\n        </LightCard>\n      </AutoColumn>\n    ) : (\n      <AutoColumn gap=\"20px\">\n        <RowFlat style={{ marginTop: '20px' }}>\n          <UIKitText fontSize=\"48px\" mr=\"8px\">\n            {liquidityMinted?.toSignificant(6)}\n          </UIKitText>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </RowFlat>\n        <Row>\n          <UIKitText fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </UIKitText>\n        </Row>\n        <UIKitText small textAlign=\"left\" padding=\"8px 0 0 0 \" style={{ fontStyle: 'italic' }}>\n          {`Output is estimated. If the price changes by more than ${\n            allowedSlippage / 100\n          }% your transaction will revert.`}\n        </UIKitText>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = `Supplying ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\n    currencies[Field.CURRENCY_A]?.symbol\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencies[Field.CURRENCY_B]?.symbol}`\n\n  const handleCurrencyASelect = useCallback(\n    (currA: Currency) => {\n      const newCurrencyIdA = currencyId(currA)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA]\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currB: Currency) => {\n      const newCurrencyIdB = currencyId(currB)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'PI'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  return (\n    <Container>\n      {/* <CardNav activeIndex={1} /> */}\n      <AppBody>\n        <AddRemoveTabs adding />\n        <Wrapper id=\"add-page\">\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash}\n            content={() => (\n              <ConfirmationModalContent\n                title={\n                  noLiquidity\n                    ? TranslateString(1154, 'You are creating a pool')\n                    : TranslateString(1156, 'You will receive')\n                }\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n          />\n          <CardBody>\n            <AutoColumn gap=\"20px\">\n              {noLiquidity && (\n                <ColumnCenter>\n                  <Pane>\n                    <AutoColumn gap=\"12px\">\n                      <UIKitText>{TranslateString(1158, 'You are the first liquidity provider.')}</UIKitText>\n                      <UIKitText>\n                        {TranslateString(1160, 'The ratio of tokens you add will set the price of this pool.')}\n                      </UIKitText>\n                      <UIKitText>\n                        {TranslateString(1162, 'Once you are happy with the rate click supply to review.')}\n                      </UIKitText>\n                    </AutoColumn>\n                  </Pane>\n                </ColumnCenter>\n              )}\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.CURRENCY_A]}\n                onUserInput={onFieldAInput}\n                onMax={() => {\n                  onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                }}\n                onCurrencySelect={handleCurrencyASelect}\n                showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                currency={currencies[Field.CURRENCY_A]}\n                id=\"add-liquidity-input-tokena\"\n                showCommonBases={false}\n              />\n              <ColumnCenter>\n                <AddIcon color=\"textSubtle\" />\n              </ColumnCenter>\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.CURRENCY_B]}\n                onUserInput={onFieldBInput}\n                onCurrencySelect={handleCurrencyBSelect}\n                onMax={() => {\n                  onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                }}\n                showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                currency={currencies[Field.CURRENCY_B]}\n                id=\"add-liquidity-input-tokenb\"\n                showCommonBases={false}\n              />\n              {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n                <div>\n                  <UIKitText\n                    style={{ textTransform: 'uppercase', fontWeight: 600 }}\n                    color=\"textSubtle\"\n                    fontSize=\"12px\"\n                    mb=\"2px\"\n                  >\n                    {noLiquidity\n                      ? TranslateString(1164, 'Initial prices and pool share')\n                      : TranslateString(1166, 'Prices and pool share')}\n                  </UIKitText>\n                  <Pane>\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </Pane>\n                </div>\n              )}\n\n              {!account ? (\n                <ConnectWalletButton width=\"100%\" />\n              ) : (\n                <AutoColumn gap=\"md\">\n                  {(approvalA === ApprovalState.NOT_APPROVED ||\n                    approvalA === ApprovalState.PENDING ||\n                    approvalB === ApprovalState.NOT_APPROVED ||\n                    approvalB === ApprovalState.PENDING) &&\n                    isValid && (\n                      <NewButton>\n                      <RowBetween>\n                        {approvalA !== ApprovalState.APPROVED && (\n                          <Button\n                            onClick={approveACallback}\n                            disabled={approvalA === ApprovalState.PENDING}\n                            style={{ width: approvalB !== ApprovalState.APPROVED ? '48%' : '100%' }}\n                          >\n                            {approvalA === ApprovalState.PENDING ? (\n                              <Dots>Approving {currencies[Field.CURRENCY_A]?.symbol}</Dots>\n                            ) : (\n                              `Approve ${currencies[Field.CURRENCY_A]?.symbol}`\n                            )}\n                          </Button>\n                        )}\n                        {approvalB !== ApprovalState.APPROVED && (\n                          <Button\n                            onClick={approveBCallback}\n                            disabled={approvalB === ApprovalState.PENDING}\n                            style={{ width: approvalA !== ApprovalState.APPROVED ? '48%' : '100%' }}\n                          >\n                            {approvalB === ApprovalState.PENDING ? (\n                              <Dots>Approving {currencies[Field.CURRENCY_B]?.symbol}</Dots>\n                            ) : (\n                              `Approve ${currencies[Field.CURRENCY_B]?.symbol}`\n                            )}\n                          </Button>\n                        )}\n                      </RowBetween>\n                      </NewButton>\n                    )}\n                  <NewButton>\n                  <Button\n                    onClick={() => {\n                      if (expertMode) {\n                        onAdd()\n                      } else {\n                        setShowConfirm(true)\n                      }\n                    }}\n                    // disabled\n                    disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                    variant={\n                      !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                        ? 'danger'\n                        : 'primary'\n                    }\n                    width=\"100%\"\n                  >\n                    {error ?? \"Supply\"}\n                  </Button>\n                  </NewButton>\n                </AutoColumn>\n              )}\n            </AutoColumn>\n          </CardBody>\n        </Wrapper>\n      </AppBody>\n      {pair && !noLiquidity && pairState !== PairState.INVALID ? (\n        <AutoColumn style={{ width: '100%', maxWidth: '720px', marginTop: '1rem' }}>\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWBNB} pair={pair} />\n        </AutoColumn>\n      ) : null}\n    </Container>\n  )\n}\n","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/RemoveLiquidity/index.tsx",["770","771","772","773"],"import React, { useCallback, useContext, useMemo, useState } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { splitSignature } from '@ethersproject/bytes'\nimport { Contract } from '@ethersproject/contracts'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, Percent, WETH } from '@paiswaptest/sdk'\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit'\nimport { ArrowDown, Plus } from 'react-feather'\nimport { RouteComponentProps } from 'react-router'\n\nimport { BigNumber } from '@ethersproject/bignumber'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport useI18n from 'hooks/useI18n'\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport { RowBetween, RowFixed } from '../../components/Row'\nimport Container from '../../components/Container'\nimport NewButton from '../../components/NewButton'\n\nimport Slider from '../../components/Slider'\nimport CurrencyLogo from '../../components/CurrencyLogo'\nimport { ROUTER_ADDRESS } from '../../constants'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { usePairContract } from '../../hooks/useContract'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { StyledInternalLink } from '../../components/Shared'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { currencyId } from '../../utils/currencyId'\nimport useDebouncedChangeHandler from '../../utils/useDebouncedChangeHandler'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport AppBody from '../AppBody'\nimport { ClickableText, Wrapper } from '../Pool/styleds'\nimport { useApproveCallback, ApprovalState } from '../../hooks/useApproveCallback'\nimport { Dots } from '../../components/swap/styleds'\nimport { useBurnActionHandlers, useDerivedBurnInfo, useBurnState } from '../../state/burn/hooks'\n\nimport { Field } from '../../state/burn/actions'\nimport { useUserDeadline, useUserSlippageTolerance } from '../../state/user/hooks'\nimport './index.scss'\n\nconst OutlineCard = styled.div`\n  border: 1px solid ${({ theme }) => theme.colors.borderColor};\n  border-radius: 16px;\n  padding: 24px;\n`\n\nconst Body = styled.div`\n  padding-left: 24px;\n  padding-right: 24px;\n`\n\nexport default function RemoveLiquidity({\n  history,\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n}: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\n  const { account, chainId, library } = useActiveWeb3React()\n  const TranslateString = useI18n()\n  const [tokenA, tokenB] = useMemo(() => [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)], [\n    currencyA,\n    currencyB,\n    chainId,\n  ])\n\n  const theme = useContext(ThemeContext)\n\n  // burn state\n  const { independentField, typedValue } = useBurnState()\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined)\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [showDetailed, setShowDetailed] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\n\n  // txn values\n  const [txHash, setTxHash] = useState<string>('')\n  const [deadline] = useUserDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\n      ? '0'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\n      ? '<1'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]:\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_A]:\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_B]:\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n  }\n\n  const atMaxAmount = parsedAmounts[Field.LIQUIDITY_PERCENT]?.equalTo(new Percent('1'))\n\n  // pair contract\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\n\n  // allowance handling\n  const [signatureData, setSignatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], ROUTER_ADDRESS)\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !library) throw new Error('missing dependencies')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n    // try to gather a signature for permission\n    const nonce = await pairContract.nonces(account)\n\n    const deadlineForSignature: number = Math.ceil(Date.now() / 1000) + deadline\n\n    console.log(\"==================================\", pair.liquidityToken.address)\n\n    const EIP712Domain = [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n    ]\n    const domain = {\n      name: 'Pancake LPs',\n      version: '1',\n      chainId,\n      verifyingContract: pair.liquidityToken.address,\n    }\n    const Permit = [\n      { name: 'owner', type: 'address' },\n      { name: 'spender', type: 'address' },\n      { name: 'value', type: 'uint256' },\n      { name: 'nonce', type: 'uint256' },\n      { name: 'deadline', type: 'uint256' },\n    ]\n    const message = {\n      owner: account,\n      spender: ROUTER_ADDRESS,\n      value: liquidityAmount.raw.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadlineForSignature,\n    }\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit,\n      },\n      domain,\n      primaryType: 'Permit',\n      message,\n    })\n    console.log(account, data)\n\n\n    library\n      .send('eth_signTypedData_v4', [account, data])\n      .then(splitSignature)\n      .then((signature) => {\n\n        setSignatureData({\n          v: signature.v,\n          r: signature.r,\n          s: signature.s,\n          deadline: deadlineForSignature,\n        })\n      })\n      .catch((e) => {\n        console.log(e)\n        // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n        if (e?.code !== 4001) {\n          approveCallback()\n        }\n      })\n  }\n\n  // wrapped onUserInput to clear signatures\n  const onUserInput = useCallback(\n    (field: Field, val: string) => {\n      setSignatureData(null)\n      return _onUserInput(field, val)\n    },\n    [_onUserInput]\n  )\n\n  const onLiquidityInput = useCallback((val: string): void => onUserInput(Field.LIQUIDITY, val), [onUserInput])\n  const onCurrencyAInput = useCallback((val: string): void => onUserInput(Field.CURRENCY_A, val), [onUserInput])\n  const onCurrencyBInput = useCallback((val: string): void => onUserInput(Field.CURRENCY_B, val), [onUserInput])\n\n  // tx sending\n  const addTransaction = useTransactionAdder()\n  async function onRemove() {\n    if (!chainId || !library || !account) throw new Error('missing dependencies')\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error('missing currency amounts')\n    }\n    const router = getRouterContract(chainId, library, account)\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0],\n    }\n\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    const currencyBIsETH = currencyB === ETHER\n    const oneCurrencyIsETH = currencyA === ETHER || currencyBIsETH\n    const deadlineFromNow = Math.ceil(Date.now() / 1000) + deadline\n\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\n\n    let methodNames: string[]\n    let args: Array<string | string[] | number | boolean>\n    // we have approval, use normal remove liquidity\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          deadlineFromNow,\n        ]\n      }\n      // removeLiquidity\n      else {\n        methodNames = ['removeLiquidity']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          deadlineFromNow,\n        ]\n      }\n    }\n    // we have a signataure, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n      // removeLiquidityETHWithPermit\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n      // removeLiquidityETHWithPermit\n      else {\n        methodNames = ['removeLiquidityWithPermit']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n    } else {\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\n    }\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\n      methodNames.map((methodName, index) =>\n        router.estimateGas[methodName](...args)\n          .then(calculateGasMargin)\n          .catch((e) => {\n            console.error(`estimateGas failed`, index, methodName, args, e)\n            return undefined\n          })\n      )\n    )\n\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex((safeGasEstimate) =>\n      BigNumber.isBigNumber(safeGasEstimate)\n    )\n\n    // all estimations failed...\n    if (indexOfSuccessfulEstimation === -1) {\n      console.error('This transaction would fail. Please contact support.')\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation]\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\n\n      setAttemptingTxn(true)\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate,\n      })\n        .then((response: TransactionResponse) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Remove ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencyA?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencyB?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        })\n        .catch((e: Error) => {\n          setAttemptingTxn(false)\n          // we only care if the error is something _other_ than the user rejected the tx\n          console.error(e)\n        })\n    }\n  }\n\n  function modalHeader() {\n    return (\n      <AutoColumn gap=\"md\" style={{ marginTop: '20px' }}>\n        <RowBetween align=\"flex-end\">\n          <Text fontSize=\"24px\">{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n          <RowFixed gap=\"4px\">\n            <CurrencyLogo currency={currencyA} size=\"24px\" />\n            <Text fontSize=\"24px\" style={{ marginLeft: '10px' }}>\n              {currencyA?.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowFixed>\n          <Plus size=\"16\" color={theme.colors.textSubtle} />\n        </RowFixed>\n        <RowBetween align=\"flex-end\">\n          <Text fontSize=\"24px\">{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n          <RowFixed gap=\"4px\">\n            <CurrencyLogo currency={currencyB} size=\"24px\" />\n            <Text fontSize=\"24px\" style={{ marginLeft: '10px' }}>\n              {currencyB?.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n\n        <Text small color=\"textSubtle\" textAlign=\"left\" padding=\"12px 0 0 0\" style={{ fontStyle: 'italic' }}>\n          {`Output is estimated. If the price changes by more than ${\n            allowedSlippage / 100\n          }% your transaction will revert.`}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  function modalBottom() {\n    return (\n      <>\n        <RowBetween>\n          <Text color=\"textSubtle\">{`${currencyA?.symbol}/${currencyB?.symbol}`} LP Burned</Text>\n          <RowFixed>\n            <DoubleCurrencyLogo currency0={currencyA} currency1={currencyB} margin />\n            <Text>{parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}</Text>\n          </RowFixed>\n        </RowBetween>\n        {pair && (\n          <>\n            <RowBetween>\n              <Text color=\"textSubtle\">{TranslateString(1182, 'Price')}</Text>\n              <Text>\n                1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\n              </Text>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <Text>\n                1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\n              </Text>\n            </RowBetween>\n          </>\n        )}\n        <NewButton>\n        <Button disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}>\n          {TranslateString(1136, 'Confirm')}\n        </Button>\n        </NewButton>\n      </>\n    )\n  }\n\n  const pendingText = `Removing ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\n    currencyA?.symbol\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencyB?.symbol}`\n\n  const liquidityPercentChangeCallback = useCallback(\n    (value: number) => {\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString())\n    },\n    [onUserInput]\n  )\n\n  const oneCurrencyIsETH = currencyA === ETHER || currencyB === ETHER\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(WETH[chainId], currencyA)) ||\n        (currencyB && currencyEquals(WETH[chainId], currencyB)))\n  )\n\n  const handleSelectCurrencyA = useCallback(\n    (currency: Currency) => {\n      if (currencyIdB && currencyId(currency) === currencyIdB) {\n        history.push(`/remove/${currencyId(currency)}/${currencyIdA}`)\n      } else {\n        history.push(`/remove/${currencyId(currency)}/${currencyIdB}`)\n      }\n    },\n    [currencyIdA, currencyIdB, history]\n  )\n  const handleSelectCurrencyB = useCallback(\n    (currency: Currency) => {\n      if (currencyIdA && currencyId(currency) === currencyIdA) {\n        history.push(`/remove/${currencyIdB}/${currencyId(currency)}`)\n      } else {\n        history.push(`/remove/${currencyIdA}/${currencyId(currency)}`)\n      }\n    },\n    [currencyIdA, currencyIdB, history]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    setSignatureData(null) // important that we clear signature data to avoid bad sigs\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\n    }\n    setTxHash('')\n  }, [onUserInput, txHash])\n\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\n    liquidityPercentChangeCallback\n  )\n\n  return (\n    <Container>\n      <AppBody>\n        <AddRemoveTabs adding={false} />\n        <Wrapper id=\"remove-page\">\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash || ''}\n            content={() => (\n              <ConfirmationModalContent\n                title={TranslateString(1156, 'You will receive')}\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n          />\n          <AutoColumn gap=\"md\">\n            <Body>\n              <OutlineCard>\n                <AutoColumn>\n                  <RowBetween>\n                    <Text>Amount</Text>\n                    <ClickableText\n                      onClick={() => {\n                        setShowDetailed(!showDetailed)\n                      }}\n                    >\n                      {showDetailed ? TranslateString(1184, 'Simple') : TranslateString(1186, 'Detailed')}\n                    </ClickableText>\n                  </RowBetween>\n                  <Flex justifyContent=\"start\">\n                    <Text fontSize=\"64px\">{formattedAmounts[Field.LIQUIDITY_PERCENT]}%</Text>\n                  </Flex>\n                  {!showDetailed && (\n                    <>\n                      <Flex mb=\"8px\">\n                        <Slider value={innerLiquidityPercentage} onChange={setInnerLiquidityPercentage} />\n                      </Flex>\n                      <Flex justifyContent=\"space-around\">\n                        <NewButton>\n                        <Button\n                          variant=\"tertiary\"\n                          scale=\"sm\"\n                          onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '25')}\n                        >\n                          25%\n                        </Button>\n                        </NewButton>\n                        <NewButton>\n                        <Button\n                          variant=\"tertiary\"\n                          scale=\"sm\"\n                          onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '50')}\n                        >\n                          50%\n                        </Button>\n                        </NewButton>\n                        <NewButton>\n                        <Button\n                          variant=\"tertiary\"\n                          scale=\"sm\"\n                          onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '75')}\n                        >\n                          75%\n                        </Button>\n                        </NewButton>\n                        <NewButton>\n                        <Button\n                          variant=\"tertiary\"\n                          scale=\"sm\"\n                          onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                        >\n                          {TranslateString(166, 'Max')}\n                        </Button>\n                        </NewButton>\n                      </Flex>\n                    </>\n                  )}\n                </AutoColumn>\n              </OutlineCard>\n            </Body>\n            {!showDetailed && (\n              <>\n                <ColumnCenter>\n                  <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\n                </ColumnCenter>\n                <Body>\n                  <OutlineCard>\n                    <AutoColumn gap=\"10px\">\n                      <RowBetween>\n                        <Text fontSize=\"24px\">{formattedAmounts[Field.CURRENCY_A] || '-'}</Text>\n                        <RowFixed>\n                          <CurrencyLogo currency={currencyA} style={{ marginRight: '12px' }} />\n                          <Text fontSize=\"24px\" id=\"remove-liquidity-tokena-symbol\">\n                            {currencyA?.symbol}\n                          </Text>\n                        </RowFixed>\n                      </RowBetween>\n                      <RowBetween>\n                        <Text fontSize=\"24px\">{formattedAmounts[Field.CURRENCY_B] || '-'}</Text>\n                        <RowFixed>\n                          <CurrencyLogo currency={currencyB} style={{ marginRight: '12px' }} />\n                          <Text fontSize=\"24px\" id=\"remove-liquidity-tokenb-symbol\">\n                            {currencyB?.symbol}\n                          </Text>\n                        </RowFixed>\n                      </RowBetween>\n                      {chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? (\n                        <RowBetween style={{ justifyContent: 'flex-end' }}>\n                          {oneCurrencyIsETH ? (\n                            <StyledInternalLink\n                              to={`/remove/${currencyA === ETHER ? WETH[chainId].address : currencyIdA}/${\n                                currencyB === ETHER ? WETH[chainId].address : currencyIdB\n                              }`}\n                            >\n                              {TranslateString(1188, 'Receive WPI')}\n                            </StyledInternalLink>\n                          ) : oneCurrencyIsWETH ? (\n                            <StyledInternalLink\n                              to={`/remove/${\n                                currencyA && currencyEquals(currencyA, WETH[chainId]) ? 'PI' : currencyIdA\n                              }/${currencyB && currencyEquals(currencyB, WETH[chainId]) ? 'PI' : currencyIdB}`}\n                            >\n                              {TranslateString(1190, 'Receive PI')}\n                            </StyledInternalLink>\n                          ) : null}\n                        </RowBetween>\n                      ) : null}\n                    </AutoColumn>\n                  </OutlineCard>\n                </Body>\n              </>\n            )}\n            <Body style={{ paddingBottom: '24px' }}>\n              {showDetailed && (\n                <>\n                  <CurrencyInputPanel\n                    value={formattedAmounts[Field.LIQUIDITY]}\n                    onUserInput={onLiquidityInput}\n                    onMax={() => {\n                      onUserInput(Field.LIQUIDITY_PERCENT, '100')\n                    }}\n                    showMaxButton={!atMaxAmount}\n                    disableCurrencySelect\n                    currency={pair?.liquidityToken}\n                    pair={pair}\n                    id=\"liquidity-amount\"\n                  />\n                  <ColumnCenter>\n                    <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\n                  </ColumnCenter>\n                  <CurrencyInputPanel\n                    hideBalance\n                    value={formattedAmounts[Field.CURRENCY_A]}\n                    onUserInput={onCurrencyAInput}\n                    onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                    showMaxButton={!atMaxAmount}\n                    currency={currencyA}\n                    label=\"Output\"\n                    onCurrencySelect={handleSelectCurrencyA}\n                    id=\"remove-liquidity-tokena\"\n                  />\n                  <ColumnCenter>\n                    <Plus size=\"16\" color={theme.colors.textSubtle} />\n                  </ColumnCenter>\n                  <CurrencyInputPanel\n                    hideBalance\n                    value={formattedAmounts[Field.CURRENCY_B]}\n                    onUserInput={onCurrencyBInput}\n                    onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                    showMaxButton={!atMaxAmount}\n                    currency={currencyB}\n                    label=\"Output\"\n                    onCurrencySelect={handleSelectCurrencyB}\n                    id=\"remove-liquidity-tokenb\"\n                  />\n                </>\n              )}\n              {pair && (\n                <div style={{ padding: '24px' }}>\n                  <Flex justifyContent=\"space-between\" mb=\"8px\">\n                    Price:\n                    <div>\n                      1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\n                    </div>\n                  </Flex>\n                  <Flex justifyContent=\"space-between\">\n                    <div />\n                    <div>\n                      1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\n                    </div>\n                  </Flex>\n                </div>\n              )}\n              <div style={{ position: 'relative' }}>\n                {!account ? (\n                  <ConnectWalletButton width=\"100%\" />\n                ) : (\n                  <RowBetween>\n                    <NewButton>\n                    <Button\n                      onClick={approveCallback}\n                      variant={approval === ApprovalState.APPROVED || signatureData !== null ? 'success' : 'primary'}\n                      disabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\n                      mr=\"8px\"\n                    >\n                      {approval === ApprovalState.PENDING ? (\n                        <Dots>Approving</Dots>\n                      ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\n                        'Approved'\n                      ) : (\n                        'Approve'\n                      )}\n                    </Button>\n                    </NewButton>\n                    <NewButton>\n                    <Button\n                      onClick={() => {\n                        setShowConfirm(true)\n                      }}\n                      disabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\n                      variant={\n                        !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                          ? 'danger'\n                          : 'primary'\n                      }\n                    >\n                      {error || 'Remove'}\n                    </Button>\n                    </NewButton>\n                  </RowBetween>\n                )}\n              </div>\n            </Body>\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n\n      {pair ? (\n        <AutoColumn style={{ width: '100%', maxWidth: '720px', marginTop: '1rem' }}>\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n        </AutoColumn>\n      ) : null}\n    </Container>\n  )\n}\n","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Web3ReactManager/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Popups/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/PoolFinder/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/Migration/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/Pool/index.tsx",["774","775","776","777"],"import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { Pair } from '@paiswaptest/sdk'\nimport { Button, CardBody, Text, useModal } from '@pancakeswap-libs/uikit'\nimport { Link } from 'react-router-dom'\nimport CardNav from 'components/CardNav'\nimport Question from 'components/QuestionHelper'\nimport FullPositionCard from 'components/PositionCard'\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks'\nimport { StyledInternalLink } from 'components/Shared'\nimport { LightCard } from 'components/Card'\nimport { RowBetween } from 'components/Row'\nimport { AutoColumn } from 'components/Column'\nimport Container from 'components/Container'\n\nimport { useActiveWeb3React } from 'hooks'\nimport { usePairs } from 'data/Reserves'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks'\nimport { Dots, Wrapper } from 'components/swap/styleds'\nimport useI18n from 'hooks/useI18n'\nimport PageHeader from 'components/PageHeader'\nimport SettingsModal from 'components/PageHeader/SettingsModal'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport NewButton from 'components/NewButton'\nimport AppBody from '../AppBody'\nimport './index.scss'\n\nexport default function Pool() {\n  const theme = useContext(ThemeContext)\n  const { account } = useActiveWeb3React()\n  const TranslateString = useI18n()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs]\n  )\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken), [\n    tokenPairsWithLiquidityTokens,\n  ])\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens\n  )\n  const [onPresentSettings] = useModal(<SettingsModal translateString={TranslateString} />)\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n\n  return (\n    <Container>\n      {/* <CardNav activeIndex={1} /> */}\n      <AppBody>\n        <Wrapper id=\"pool-page\">\n        {/* <PageHeader\n          title={TranslateString(262, 'Liquidity')}\n          description={TranslateString(1168, 'Add liquidity to receive LP tokens')}\n        >\n          <Button id=\"join-pool-button\" as={Link} to=\"/add/PI\" mb=\"16px\">\n            {TranslateString(168, 'Add Liquidity')}\n          </Button>\n        </PageHeader> */}\n        <div className=\"page-header\">\n          <div className=\"tab\">\n            <Link to=\"/swap\" className=\"tab-item\">\n                Swap\n            </Link>\n            <Link to=\"/pool\" className=\"tab-item active\">\n                Liquidity\n            </Link>\n            <div className=\"settings\" onClick={onPresentSettings} aria-hidden=\"true\">\n              <img src=\"https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPngf04ec6ad4674a213f4e083ab0501e6bb274beaf7a8c19ecd7edf06b874e05a1a\" referrerPolicy=\"no-referrer\" alt=\"\" />\n            </div>\n          </div>\n        </div>\n        <AutoColumn gap=\"lg\" justify=\"center\">\n          <CardBody style={{ width: '100%' }}>\n            <AutoColumn gap=\"12px\" style={{ width: '100%' }}>\n              <RowBetween padding=\"0 8px\">\n                <Text color={theme.colors.text}>{TranslateString(107, 'Your Liquidity')}</Text>\n                <Question\n                  text={TranslateString(\n                    1170,\n                    'When you add liquidity, you are given pool tokens that represent your share. If you don’t see a pool you joined in this list, try importing a pool below.'\n                  )}\n                />\n              </RowBetween>\n\n              {!account ? (\n                <LightCard padding=\"40px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    {TranslateString(156, 'Connect to a wallet to view your liquidity.')}\n                  </Text>\n                </LightCard>\n              ) : v2IsLoading ? (\n                <LightCard padding=\"40px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    <Dots>Loading</Dots>\n                  </Text>\n                </LightCard>\n              ) : allV2PairsWithLiquidity?.length > 0 ? (\n                <>\n                  {allV2PairsWithLiquidity.map((v2Pair) => (\n                    <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\n                  ))}\n                </>\n              ) : (\n                <LightCard padding=\"40px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    {TranslateString(104, 'No liquidity found.')}\n                  </Text>\n                </LightCard>\n              )}\n\n            {!account ? (\n              <ConnectWalletButton width=\"100%\" />\n              ) : (\n                <NewButton>\n                <Button id=\"join-pool-button\" as={Link} to=\"/add/PI\" mb=\"16px\">\n                  {TranslateString(168, 'Add Liquidity')}\n                </Button>\n                </NewButton>\n              )\n            }\n\n              {/* <div>\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }}>\n                  {TranslateString(106, \"Don't see a pool you joined?\")}{' '}\n                  <StyledInternalLink id=\"import-pool-link\" to=\"/find\">\n                    {TranslateString(108, 'Import it.')}\n                  </StyledInternalLink>\n                </Text>\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }}>\n                  {TranslateString(1172, 'Or, if you staked your LP tokens in a farm, unstake them to see them here.')}\n                </Text>\n              </div> */}\n            </AutoColumn>\n          </CardBody>\n        </AutoColumn>\n        </Wrapper>\n      </AppBody>\n    </Container>\n  )\n}\n","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/Swap/index.tsx",["778","779","780","781","782","783","784","785"],"import { CurrencyAmount, JSBI, Token, Trade } from '@paiswaptest/sdk'\nimport React, { useCallback, useContext, useEffect, useMemo, useState, useRef } from 'react'\nimport { ArrowDown } from 'react-feather'\nimport { CardBody, ArrowDownIcon, Button, IconButton, Text, useModal, Flex } from '@pancakeswap-libs/uikit'\nimport styled, { ThemeContext } from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport AddressInputPanel from 'components/AddressInputPanel'\nimport Card, { GreyCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal'\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport CardNav from 'components/CardNav'\nimport { AutoRow, RowBetween } from 'components/Row'\nimport AdvancedSwapDetailsDropdown from 'components/swap/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from 'components/swap/styleds'\nimport TradePrice from 'components/swap/TradePrice'\nimport TokenWarningModal from 'components/TokenWarningModal'\nimport SyrupWarningModal from 'components/SyrupWarningModal'\nimport SafeMoonWarningModal from 'components/SafeMoonWarningModal'\nimport ProgressSteps from 'components/ProgressSteps'\nimport Container from 'components/Container'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from 'constants/index'\nimport { useActiveWeb3React } from 'hooks'\nimport { useCurrency } from 'hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback'\nimport { useSwapCallback } from 'hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\nimport { Field } from 'state/swap/actions'\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\nimport { useExpertModeManager, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks'\nimport { LinkStyledButton } from 'components/Shared'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport Loader from 'components/Loader'\nimport useI18n from 'hooks/useI18n'\nimport PageHeader from 'components/PageHeader'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport V2ExchangeRedirectModal from 'components/V2ExchangeRedirectModal'\nimport SettingsModal from 'components/PageHeader/SettingsModal'\nimport AppBody from '../AppBody'\nimport './index.scss'\n\n// const StyledLink = styled(Link)`\n//   display: inline;\n//   color: ${({ theme }) => theme.colors.failure};\n// `\n\nconst Swap = () => {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n  const TranslateString = useI18n()\n  const [modalCountdownSecondsRemaining, setModalCountdownSecondsRemaining] = useState(5)\n  const [disableSwap, setDisableSwap] = useState(false)\n  const [hasPoppedModal, setHasPoppedModal] = useState(false)\n  const [interruptRedirectCountdown, setInterruptRedirectCountdown] = useState(false)\n  const [onPresentV2ExchangeRedirectModal] = useModal(\n    <V2ExchangeRedirectModal handleCloseModal={() => setInterruptRedirectCountdown(true)} />\n  )\n  const onPresentV2ExchangeRedirectModalRef = useRef(onPresentV2ExchangeRedirectModal)\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\n  const [transactionWarning, setTransactionWarning] = useState<{\n    selectedToken: string | null\n    purchaseType: string | null\n  }>({\n    selectedToken: null,\n    purchaseType: null,\n  })\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency]\n  )\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n  }, [])\n\n  const handleConfirmWarning = () => {\n    setTransactionWarning({\n      selectedToken: null,\n      purchaseType: null,\n    })\n  }\n\n  const { account } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [deadline] = useUserDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\n    currencies[Field.INPUT],\n    currencies[Field.OUTPUT],\n    typedValue\n  )\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n  const [onPresentSettings] = useModal(<SettingsModal translateString={TranslateString} />)\n\n  // Manage disabled trading pairs that should redirect users to V2\n  useEffect(() => {\n    const disabledSwaps = [\n      'BNB',\n      'BUSD',\n      'USDT',\n      'USDC',\n      'CAKE',\n      'BUNNY',\n      'ETH',\n      'BTCB',\n      'AUTO',\n      'XVS',\n      'SAFEMOON',\n      'DAI',\n      'ADA',\n      'DOT',\n      'ElonGate',\n      'TWT',\n      'ALPACA',\n      'IOTX',\n      'BAND',\n      'ATOM',\n      'EOS',\n      'SFP',\n      'SWINGBY',\n    ]\n    const inputCurrencySymbol = currencies[Field.INPUT]?.symbol || ''\n    const outputCurrencySymbol = currencies[Field.OUTPUT]?.symbol || ''\n    const doesInputMatch = disabledSwaps.includes(inputCurrencySymbol)\n    const doesOutputMatch = disabledSwaps.includes(outputCurrencySymbol)\n\n    if (doesInputMatch && doesOutputMatch) {\n      // Prevent infinite re-render of modal with this condition\n      if (!hasPoppedModal) {\n        setHasPoppedModal(true)\n        onPresentV2ExchangeRedirectModalRef.current()\n      }\n\n      // Controls the swap buttons being disabled & renders a message\n      setDisableSwap(true)\n\n      const tick = () => {\n        setModalCountdownSecondsRemaining((prevSeconds) => prevSeconds - 1)\n      }\n      const timerInterval = setInterval(() => tick(), 1000)\n\n      if (interruptRedirectCountdown) {\n        // Reset timer if countdown is interrupted\n        clearInterval(timerInterval)\n        setModalCountdownSecondsRemaining(5)\n      }\n\n      if (modalCountdownSecondsRemaining <= 0) {\n        window.location.href = 'https://exchange.pancakeswap.finance/#/swap'\n      }\n\n      return () => {\n        clearInterval(timerInterval)\n      }\n    }\n\n    // Unset disableSwap state if the swap inputs & outputs dont match disabledSwaps\n    setDisableSwap(false)\n    return undefined\n  }, [\n    currencies,\n    hasPoppedModal,\n    modalCountdownSecondsRemaining,\n    onPresentV2ExchangeRedirectModalRef,\n    interruptRedirectCountdown,\n  ])\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\n    trade,\n    allowedSlippage,\n    deadline,\n    recipient\n  )\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState((prevState) => ({ ...prevState, attemptingTxn: true, swapErrorMessage: undefined, txHash: undefined }))\n    swapCallback()\n      .then((hash) => {\n        setSwapState((prevState) => ({\n          ...prevState,\n          attemptingTxn: false,\n          swapErrorMessage: undefined,\n          txHash: hash,\n        }))\n      })\n      .catch((error) => {\n        setSwapState((prevState) => ({\n          ...prevState,\n          attemptingTxn: false,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        }))\n      })\n  }, [priceImpactWithoutFee, swapCallback, setSwapState])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, showConfirm: false }))\n\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [onUserInput, txHash, setSwapState])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, tradeToConfirm: trade }))\n  }, [trade])\n\n  // This will check to see if the user has selected Syrup or SafeMoon to either buy or sell.\n  // If so, they will be alerted with a warning message.\n  const checkForWarning = useCallback(\n    (selected: string, purchaseType: string) => {\n      if (['SYRUP', 'SAFEMOON'].includes(selected)) {\n        setTransactionWarning({\n          selectedToken: selected,\n          purchaseType,\n        })\n      }\n    },\n    [setTransactionWarning]\n  )\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setHasPoppedModal(false)\n      setInterruptRedirectCountdown(false)\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      if (inputCurrency.symbol === 'SYRUP') {\n        checkForWarning(inputCurrency.symbol, 'Selling')\n      }\n      if (inputCurrency.symbol === 'SAFEMOON') {\n        checkForWarning(inputCurrency.symbol, 'Selling')\n      }\n    },\n    [onCurrencySelection, setApprovalSubmitted, checkForWarning]\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      setHasPoppedModal(false)\n      setInterruptRedirectCountdown(false)\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      if (outputCurrency.symbol === 'SYRUP') {\n        checkForWarning(outputCurrency.symbol, 'Buying')\n      }\n      if (outputCurrency.symbol === 'SAFEMOON') {\n        checkForWarning(outputCurrency.symbol, 'Buying')\n      }\n    },\n    [onCurrencySelection, checkForWarning]\n  )\n\n  return (\n    <Container>\n      <TokenWarningModal\n        isOpen={urlLoadedTokens.length > 0 && !dismissTokenWarning}\n        tokens={urlLoadedTokens}\n        onConfirm={handleConfirmTokenWarning}\n      />\n      <SyrupWarningModal\n        isOpen={transactionWarning.selectedToken === 'SYRUP'}\n        transactionType={transactionWarning.purchaseType}\n        onConfirm={handleConfirmWarning}\n      />\n      <SafeMoonWarningModal isOpen={transactionWarning.selectedToken === 'SAFEMOON'} onConfirm={handleConfirmWarning} />\n      {/* <CardNav /> */}\n      <AppBody>\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n          <div className=\"page-header\">\n            {/* <PageHeader\n              title={TranslateString(8, 'Exchange')}\n              description={TranslateString(1192, 'Trade tokens in an instant')}\n            /> */}\n            <div className=\"tab\">\n              <Link to=\"/swap\" className=\"tab-item active\">\n                Swap\n              </Link>\n              <Link to=\"/pool\" className=\"tab-item\">\n                Liquidity\n              </Link>\n              <div className=\"settings\" onClick={onPresentSettings} aria-hidden=\"true\">\n                <img src=\"https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPngf04ec6ad4674a213f4e083ab0501e6bb274beaf7a8c19ecd7edf06b874e05a1a\" referrerPolicy=\"no-referrer\" alt=\"\" />\n              </div>\n            </div>\n          </div>\n          <CardBody>\n            <AutoColumn gap=\"md\">\n              <div className=\"input-wrap\">\n              <CurrencyInputPanel\n                label={\n                  independentField === Field.OUTPUT && !showWrap && trade\n                    ? TranslateString(194, 'From (estimated)')\n                    : TranslateString(76, 'From')\n                }\n                value={formattedAmounts[Field.INPUT]}\n                showMaxButton={!atMaxAmountInput}\n                currency={currencies[Field.INPUT]}\n                onUserInput={handleTypeInput}\n                onMax={handleMaxInput}\n                onCurrencySelect={handleInputSelect}\n                otherCurrency={currencies[Field.OUTPUT]}\n                id=\"swap-currency-input\"\n              />\n              </div>\n              <AutoColumn justify=\"space-between\">\n                <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable>\n                    <IconButton\n                      variant=\"tertiary\"\n                      onClick={() => {\n                        setApprovalSubmitted(false) // reset 2 step UI for approvals\n                        onSwitchTokens()\n                      }}\n                      style={{ borderRadius: '50%', background: 'transparent' }}\n                      scale=\"sm\"\n                    >\n                      {/* <ArrowDownIcon color=\"primary\" width=\"24px\" /> */}\n                      <img src=\"https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPngf5c2c440d93fb9abf6a5c7413c2207262023660a5578b5764604bd4242e33a22\" referrerPolicy=\"no-referrer\" alt=\"\" />\n                    </IconButton>\n                  </ArrowWrapper>\n                  {recipient === null && !showWrap && isExpertMode ? (\n                    <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                      + Add a send (optional)\n                    </LinkStyledButton>\n                  ) : null}\n                </AutoRow>\n              </AutoColumn>\n              <div className=\"input-wrap\">\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.OUTPUT]}\n                onUserInput={handleTypeOutput}\n                label={\n                  independentField === Field.INPUT && !showWrap && trade\n                    ? TranslateString(196, 'To (estimated)')\n                    : TranslateString(80, 'To')\n                }\n                showMaxButton={false}\n                currency={currencies[Field.OUTPUT]}\n                onCurrencySelect={handleOutputSelect}\n                otherCurrency={currencies[Field.INPUT]}\n                id=\"swap-currency-output\"\n              />\n              </div>\n\n              {recipient !== null && !showWrap ? (\n                <>\n                  <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                    <ArrowWrapper clickable={false}>\n                      <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\n                    </ArrowWrapper>\n                    <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                      - Remove send\n                    </LinkStyledButton>\n                  </AutoRow>\n                  <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n                </>\n              ) : null}\n\n              {showWrap ? null : (\n                <Card padding=\".25rem .75rem 0 .75rem\" borderRadius=\"20px\">\n                  <AutoColumn gap=\"4px\">\n                    {/* {Boolean(trade) && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"14px\">{TranslateString(1182, 'Price')}</Text>\n                        <TradePrice\n                          price={trade?.executionPrice}\n                          showInverted={showInverted}\n                          setShowInverted={setShowInverted}\n                        />\n                      </RowBetween>\n                    )} */}\n                    {/* {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"14px\">{TranslateString(88, 'Slippage Tolerance')}</Text>\n                        <Text fontSize=\"14px\">{allowedSlippage / 100}%</Text>\n                      </RowBetween>\n                    )} */}\n                  </AutoColumn>\n                </Card>\n              )}\n            </AutoColumn>\n            <BottomGrouping>\n              {disableSwap && (\n                <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"1rem\">\n                  <Text color=\"failure\">\n                    Please use{' '}\n                    {/* <StyledLink external href=\"https://exchange.pancakeswap.finance\">\n                      PancakeSwap V2\n                    </StyledLink>{' '} */}\n                    to make this trade\n                  </Text>\n                </Flex>\n              )}\n              {!account ? (\n                <ConnectWalletButton width=\"100%\" />\n              ) : showWrap ? (\n                <Button disabled={Boolean(wrapInputError)} onClick={onWrap} width=\"100%\">\n                  {wrapInputError ??\n                    (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n                </Button>\n              ) : noRoute && userHasSpecifiedInputOutput ? (\n                <GreyCard style={{ textAlign: 'center' }}>\n                  <Text mb=\"4px\">{TranslateString(1194, 'Insufficient liquidity for this trade.')}</Text>\n                </GreyCard>\n              ) : showApproveFlow ? (\n                <RowBetween>\n                  <Button\n                    onClick={approveCallback}\n                    disabled={disableSwap || approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                    style={{ width: '48%' }}\n                    variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  >\n                    {approval === ApprovalState.PENDING ? (\n                      <AutoRow gap=\"6px\" justify=\"center\">\n                        Approving <Loader stroke=\"white\" />\n                      </AutoRow>\n                    ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                      'Approved'\n                    ) : (\n                      `Approve ${currencies[Field.INPUT]?.symbol}`\n                    )}\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      if (isExpertMode) {\n                        handleSwap()\n                      } else {\n                        setSwapState({\n                          tradeToConfirm: trade,\n                          attemptingTxn: false,\n                          swapErrorMessage: undefined,\n                          showConfirm: true,\n                          txHash: undefined,\n                        })\n                      }\n                    }}\n                    style={{ width: '48%' }}\n                    id=\"swap-button\"\n                    disabled={\n                      disableSwap ||\n                      !isValid ||\n                      approval !== ApprovalState.APPROVED ||\n                      (priceImpactSeverity > 3 && !isExpertMode)\n                    }\n                    variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  >\n                    {priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                  </Button>\n                </RowBetween>\n              ) : (\n                <Button\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined,\n                      })\n                    }\n                  }}\n                  id=\"swap-button\"\n                  disabled={\n                    disableSwap || !isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError\n                  }\n                  variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                  width=\"100%\"\n                >\n                  {swapInputError ||\n                    (priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact Too High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`)}\n                </Button>\n              )}\n              {showApproveFlow && <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />}\n              {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n            </BottomGrouping>\n          </CardBody>\n        </Wrapper>\n      </AppBody>\n      <AdvancedSwapDetailsDropdown trade={trade} />\n    </Container>\n  )\n}\n\nexport default Swap\n","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/AppHeader/index.jsx",["786","787","788","789","790"],"/* eslint-disable import/no-unresolved */\n/* eslint-disable import/order */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable no-unused-expressions */\nimport React, { useEffect, useState } from 'react'\nimport './index.scss'\nimport { useWeb3React } from '@web3-react/core'\nimport Button from '../ConnectButton'\nimport ConnectWallet from '../ConnectWallet'\nimport WalletOption from '../WalletOption'\nimport logo from '../../assets/images/logo.png'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { subSplit } from '../../util'\nimport { Menu, Dropdown } from 'antd'\nimport useAuth from 'hooks/useAuth'\nimport burger from '../../assets/images/burger.png'\n\nfunction Index(props) {\n  const history = useHistory()\n  const location = useLocation()\n  const [showMenu, setShowMenu] = useState(false)\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n\n  window.ethereum && window.ethereum.on('chainChanged', _chainId => window.location.reload())\n\n  window.ethereum &&\n    window.ethereum.on('accountsChanged', accounts => {\n      console.log(accounts)\n    })\n\n  const nameList = {\n    // '/': 'HOME',\n    // '/l2wallet': 'L2 WALLET',\n    // '/pool': 'POOL',\n    '/swap': 'SWAP'\n  }\n\n\n  const onClick = ({ key }) => {\n    if (key === \"logout\") {\n      logout()\n      window.localStorage.removeItem('connectorId')\n    }\n  };\n\n  const menu = (\n    <Menu onClick={onClick}>\n      <Menu.Item key=\"logout\">Disconnect Wallet</Menu.Item>\n    </Menu>\n  );\n  return (\n    <header className=\"flex items-center header\">\n      <div className=\"flex items-center justify-between header-wrap flex-nowrap\">\n        <img src={logo} alt=\"piswap\" className=\"logo\" />\n        <>\n          <div className=\"hidden header-title sm:block\">\n            <span>\n              <a href=\"http://test.paiswap.io/\">Home</a>\n            </span>\n            {\n              Object.keys(nameList).map(name => {\n                return (\n                  <span\n                    className={name === '/swap' ? 'active' : ''}\n                    key={name}>\n                    <a href={name === '/l2wallet' ? '/l2wallet?withdraw' : name}>\n                      {nameList[name]}\n                    </a>\n                  </span>\n                )\n              })\n            }\n          </div>\n          <div className=\"block header-title sm:hidden\">{nameList[location.pathname]}</div>\n        </>\n        <>\n          \n          <div className=\"items-center hidden mt-4 sm:mt-0 sm:flex\" id=\"header-right\">\n            <WalletOption />\n            {account ? (\n              <Dropdown overlay={menu} trigger={['click']} getPopupContainer={() => document.getElementById('header-right') }>\n                <Button>{subSplit(account, 6, 4)}</Button>\n              </Dropdown>\n            ) :\n              <ConnectWallet>\n                <Button>Connect Wallet</Button>\n              </ConnectWallet>\n            }\n          </div>\n          <div className=\"block burger sm:hidden\" onClick={() => setShowMenu(true)}>\n            <img src={burger} alt=\"memu\" />\n          </div>\n        </>\n      </div>\n\n      {showMenu && (\n        <div className=\"block open-menu sm:hidden\">\n          <div className=\"flex items-center justify-between\">\n            <img src={logo} alt=\"piswap\" className=\"logo\" />\n            <span className=\"close\" onClick={() => setShowMenu(false)}>\n              &times;\n            </span>\n          </div>\n          <ul className=\"cell-list\">\n            {\n              Object.keys(nameList).map(name => {\n                return (\n                  <li\n                    className={name === '/swap' ? 'active' : ''}\n                    key={name}>\n                      {nameList[name]}\n                  </li>\n                )\n              })\n            }\n\n          </ul>\n        </div>\n      )}\n    </header>\n  )\n}\n\nexport default Index\n",["791","792","793","794","795"],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/AppFooter/index.jsx",["796"],"/* eslint-disable import/no-unresolved */\n/* eslint-disable import/order */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable no-unused-expressions */\nimport React from 'react'\nimport './index.scss'\nimport github from '../../assets/images/github.png'\nimport twitter from '../../assets/images/twitter.png'\nimport telegram from '../../assets/images/telegram.png'\n\nfunction Index(props) {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer-item\">\n        <a href=\"https://pizzap.gitbook.io/pizzap/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={github} alt=\"github\" />\n        </a>\n      </div>\n      <div className=\"footer-item\">\n        <a href=\"https://twitter.com/pizzap_io\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={twitter} alt=\"twitter\" />\n        </a>\n      </div>\n      <div className=\"footer-item\">\n        <a href=\"https://t.me/pizzap_io\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={telegram} alt=\"telegram\" />\n        </a>\n      </div>\n    </footer>\n  )\n}\n\nexport default Index\n","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/connectors/index.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/theme.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/index.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/constants/multicall/index.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useToast.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/useGetCakeBusdLpPrice.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/multicall/reducer.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/lists/reducer.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/transactions/reducer.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/swap/reducer.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/burn/reducer.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/mint/reducer.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/user/reducer.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/AppBody.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/connectors/NetworkConnector.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/toasts/index.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/constants/lists.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/swap/actions.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/burn/actions.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/global/actions.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/mint/actions.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useI18n.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/prices.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/maxAmountSpend.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/user/actions.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/PageHeader/SettingsModal.tsx",["797"],"import React from 'react'\nimport { Modal } from '@pancakeswap-libs/uikit'\nimport SlippageToleranceSetting from './SlippageToleranceSetting'\nimport TransactionDeadlineSetting from './TransactionDeadlineSetting'\nimport AudioSetting from './AudioSetting'\n\ntype SettingsModalProps = {\n  onDismiss?: () => void\n  translateString: (translationId: number, fallback: string) => string\n}\n\n// TODO: Fix UI Kit typings\nconst defaultOnDismiss = () => null\n\nconst SettingsModal = ({ onDismiss = defaultOnDismiss, translateString }: SettingsModalProps) => {\n  return (\n    <Modal title={translateString(1200, 'Settings')} onDismiss={onDismiss}>\n      <SlippageToleranceSetting translateString={translateString} />\n      <TransactionDeadlineSetting translateString={translateString} />\n      {/* <AudioSetting translateString={translateString} /> */}\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/user/hooks.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/actions.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/Tokens.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/swap/hooks.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/V2ExchangeRedirectModal/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/ConnectWalletButton/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Shared/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Loader/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/PageHeader/TransactionDeadlineSetting.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/PageHeader/SlippageToleranceSetting.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/multicall/hooks.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/Trades.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useParsedQueryString.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useENS.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/wallet/hooks.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/lists/hooks.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/translateTextHelpers.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Shared/Common.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/wrappedCurrency.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useENSName.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useENSAddress.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/data/Reserves.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useAuth.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/QuestionHelper/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/NewButton/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/isZero.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/util/index.js",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/WalletOption/index.jsx",["798","799","800","801"],"/* eslint-disable prefer-promise-reject-errors */\n/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable import/order */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable no-unused-expressions */\nimport React, { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Dropdown, Menu, Skeleton } from 'antd'\nimport CONFIG from '../../util/pool/config.json'\nimport { getBalanceOf } from '../../util/pool/Balance'\nimport { toFixed } from '../../util'\nimport { getBalance } from '../../util/pool/Pi'\nimport Wallet from '../../assets/images/wallet.svg'\n\nconst PNFT = require('../../assets/images/pnft.jpg')\nconst PI = require('../../assets/images/pi.jpg')\n\nconst coinList = [\n    {\n        icon: PI,\n        name: 'PI',\n        amount: 0,\n        wait: getBalance,\n    },\n    {\n        key: CONFIG.pNftContractAddress,\n        icon: PNFT,\n        name: 'PNFT',\n        amount: 0,\n        wait: getBalanceOf,\n    }\n]\n\nfunction WalletOption() {\n    const [loading, setLoading] = useState(false)\n    const [list, setList] = useState([])\n    const { account } = useWeb3React()\n    useEffect(() => {\n        account && initialize(account)\n        return () => {\n            console.log('销毁');\n        }\n    }, [account])\n\n    const initialize = (address) => {\n        setLoading(true)\n        const list = []\n        coinList.map(async (x) => {\n            await list.push(getPromiseBalance(x, address))\n        })\n\n        Promise.all(list).then(res => {\n            setList(res)\n            setLoading(false)\n        })\n    }\n\n    const getPromiseBalance = (x, address) => {\n        return new Promise((resolve, riject) => {\n            (x.key ? x.wait(x.key, address) : x.wait(address)).then(v => {\n                resolve({ name: x.name, icon: x.icon, amount: v })\n            }).catch(e => {\n                riject({ name: x.name, icon: x.icon, amount: 0 })\n            })\n        })\n    }\n    return (\n        <Dropdown overlay={\n            <Menu style={{ width: 270, height: 215, overflowY: 'auto' }}>\n                <Skeleton loading={loading} active>\n                    <div style={{ padding: 10 }}>\n                        {list && list.map(item => (\n                            <div key={item.name} style={{ display: 'flex', alignItems: 'center' }}>\n                                <img src={item.icon.default} alt={item.name} style={{ width: 25, height: 25 }} />\n                                <span style={{ flex: .3, paddingLeft: 10 }}>{item.name}</span>\n                                <span style={{ flex: 1, textAlign: 'end' }}>{toFixed(item.amount)}</span>\n                            </div>\n                        ))}\n                    </div>\n                </Skeleton>\n            </Menu>\n        } placement=\"bottomLeft\" trigger={['click']} destroyPopupOnHide getPopupContainer={() => document.getElementById('header-right')}>\n            <img src={Wallet} alt=\"wallet\" style={{ width: 36, height: 31.5, marginRight: 40, cursor: 'pointer' }} />\n        </Dropdown>\n    );\n}\n\nexport default WalletOption;","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/ConnectWallet/index.jsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/ConnectButton/index.jsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Tooltip/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/util/pool/Pi.js",["802"],"/* eslint-disable prefer-const */\n/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable no-async-promise-executor */\nimport { Contract } from '@ethersproject/contracts'\nimport { Web3Provider, getDefaultProvider } from '@ethersproject/providers'\nimport { formatEther, parseEther } from '@ethersproject/units'\nimport PI_ABI from './abis/PiStakingEpoch.json'\nimport UNI_ABI from './abis/UniswapV2Pair.json' // 质押输入\nimport CONFIG from './config.json';\n\nconst PI_STAKING = new Contract(CONFIG.piContractAddress, PI_ABI, getDefaultProvider(CONFIG.testNetWork));\n\nconst UNISWAP_STAKING = new Contract(CONFIG.uniswapContractAddress, UNI_ABI.abi, getDefaultProvider(CONFIG.testNetWork));\n/**\n * 平台币余额\n * @param {userAddress} 用户地址 \n * @returns \n */\nexport function getBalance(userAddress) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const { ethereum } = window\n            const bal = await ethereum.request({\n                method: 'eth_getBalance',\n                params: [userAddress, 'latest']\n            })\n            resolve(formatEther(bal))\n        } catch (error) {\n            resolve(error)\n        }\n    })\n\n}\n\n/**\n * 质押PI\n * @param {*} 质押PI的数量，PI的精度为18，数值按照精度换算好 {value}\n * @returns \n */\nexport function deposit(value) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const PI_STAKING = new Contract(CONFIG.piContractAddress, PI_ABI, new Web3Provider(window.web3.currentProvider).getSigner());\n            const list = await PI_STAKING.deposit({ value: parseEther(value) })\n            resolve(list)\n        } catch (error) {\n            reject(error)\n        }\n    })\n}\n\n/**\n * 查询制定用户地址上质押的PI数量\n * @param {*} 用户地址 _user\n * @returns {*} 质押的PI的数量，带有精度的数值 amount\n */\nexport function getStaking(_user) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const list = await PI_STAKING.getStaking(_user);\n            resolve(formatEther(list))\n        } catch (error) {\n            reject(error)\n        }\n    })\n}\n\n/**\n * 获取全网质押PI的总数量\n * @returns {*} 全网质押PI的总数，根据精度换算之后的数值 amount\n */\nexport function getTotalSupply() {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const list = await PI_STAKING.getTotalSupply();\n            resolve(formatEther(list))\n        } catch (error) {\n            reject(error)\n        }\n    })\n}\n\n/**\n * 获取全网质押PI的总数量\n * @param {_user} 查询用户地址上待领取的PNFT的数量\n * @returns {amount} 用户质押挖矿未领取的PNFT数量，根据精度换算之后的数值 \n */\nexport function getPendingReward(_user) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const list = await PI_STAKING.pendingReward(_user);\n            resolve(formatEther(list))\n        } catch (error) {\n            reject(error)\n        }\n    })\n}\n\n\n/**\n * 赎回质押的PI\n * @param {_amount} 待赎回的PI的数量，根据精度换算之后的数值\n * @returns {amount} 用户质押挖矿未领取的PNFT数量，根据精度换算之后的数值 \n */\nexport function getRedemption(_amount) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const PI_STAKING = new Contract(CONFIG.piContractAddress, PI_ABI, new Web3Provider(window.web3.currentProvider).getSigner());\n            const list = await PI_STAKING.withdraw(parseEther(_amount.toString()));\n            resolve(list)\n        } catch (error) {\n            reject(error)\n        }\n    })\n}\n\n\n/**\n * 计算APY\n * @returns {*} _reserve0 _reserve1\n */\n export function getApy() {\n    return new Promise(async (resolve, reject) => {\n        try {\n            // 币种价格\n            const reserves = await UNISWAP_STAKING.getReserves();\n            // 币种0的合约地址\n            const token0 = await UNISWAP_STAKING.token0();\n            // 币种1的合约地址\n            const token1 = await UNISWAP_STAKING.token1();\n            // 每个块的奖励\n            const totalReward = await PI_STAKING.rewardPerBlock();\n            let list = {\n                reserves,\n                token0,\n                token1,\n                totalReward: formatEther(totalReward)\n            }\n            resolve(list)\n        } catch (error) {\n            reject(error)\n        }\n    })\n}","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/util/pool/Balance.js",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Popover/index.tsx",[],["803","804","805","806","807"],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useWrapCallback.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useSwapCallback.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useApproveCallback.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/transactions/hooks.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/data/Allowances.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/Migration/FAQ.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/Migration/SecondCard.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/Migration/FirstCard.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/Pool/styleds.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/burn/hooks.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/useDebouncedChangeHandler.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/currencyId.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Popups/PopupItem.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/swap/styleds.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Container.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/swap/confirmPriceImpactWithoutFee.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/AddLiquidity/PoolPriceBar.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/AddLiquidity/ConfirmAddModalBottom.tsx",["808"],"import { Currency, CurrencyAmount, Fraction, Percent } from '@paiswaptest/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap-libs/uikit'\nimport { TranslateString } from 'utils/translateTextHelpers'\nimport { RowBetween, RowFixed } from '../../components/Row'\nimport CurrencyLogo from '../../components/CurrencyLogo'\nimport { Field } from '../../state/mint/actions'\nimport NewButton from '../../components/NewButton'\n\nexport function ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  return (\n    <>\n      <RowBetween>\n        <Text>{currencies[Field.CURRENCY_A]?.symbol} Deposited</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{currencies[Field.CURRENCY_B]?.symbol} Deposited</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>Rates</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>Share of Pool:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <NewButton>\n      <Button mt=\"20px\" onClick={onAdd}>\n        {noLiquidity ? 'Create Pool & Supply' : 'Confirm Supply'}\n      </Button>\n      </NewButton>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/swap/AdvancedSwapDetailsDropdown.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/swap/ConfirmSwapModal.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/pages/Migration/config.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/application/reducer.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/uriToHttp.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/parseENSAddress.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/contenthashToUri.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/data/TotalSupply.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SearchModal/CurrencySearchModal.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Column/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/CurrencyLogo/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Slider/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Popups/TransactionPopup.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Row/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/NavigationTabs/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/PositionCard/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/TransactionConfirmationModal/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/DoubleLogo/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/CurrencyInputPanel/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Popups/ListUpdatePopup.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/ProgressSteps/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SafeMoonWarningModal/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/TokenWarningModal/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SyrupWarningModal/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Card/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/AddressInputPanel/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useLast.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/state/mint/hooks.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/swap/AdvancedSwapDetails.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/swap/SwapModalHeader.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/swap/SwapModalFooter.tsx",["809"],"import { Trade, TradeType } from '@paiswaptest/sdk'\nimport React, { useMemo, useState } from 'react'\nimport { Text, Button } from '@pancakeswap-libs/uikit'\nimport { Repeat } from 'react-feather'\n\nimport useI18n from 'hooks/useI18n'\nimport { Field } from '../../state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from '../../utils/prices'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\nimport NewButton from '../NewButton'\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [\n    allowedSlippage,\n    trade,\n  ])\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <AutoColumn gap=\"0px\">\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '8px',\n              fontWeight: 500,\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <Repeat size={14} />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? TranslateString(1210, 'Minimum received')\n                : TranslateString(220, 'Maximum sold')}\n            </Text>\n            <QuestionHelper\n              text={TranslateString(\n                202,\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.'\n              )}\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{TranslateString(226, 'Price Impact')}</Text>\n            <QuestionHelper\n              text={TranslateString(224, 'The difference between the market price and your price due to trade size.')}\n            />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{TranslateString(228, 'Liquidity Provider Fee')}</Text>\n            <QuestionHelper\n              text={TranslateString(\n                999,\n                'For each trade a 0.2% fee is paid. 0.17% goes to liquidity providers and 0.03% goes to the PancakeSwap treasury.'\n              )}\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </AutoColumn>\n\n      {/* <AutoRow> */}\n        <NewButton>\n        <Button\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          variant={severity > 2 ? 'danger' : 'primary'}\n          mt=\"10px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n        </NewButton>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      {/* </AutoRow> */}\n    </>\n  )\n}\n","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/CardNav/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SearchModal/ListSelect.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SearchModal/CurrencySearch.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useHttpLocations.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/pancake/CoinLogo.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/utils/listVersionLabel.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/TransactionConfirmationModal/TransactionErrorContent.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/TransactionConfirmationModal/TransactionConfirmationModal.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/TransactionConfirmationModal/ConfirmationModalContent.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/TransactionConfirmationModal/ConfirmationPendingContent.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/TransactionConfirmationModal/TransactionSubmittedContent.tsx",["810"],"import { ChainId } from '@paiswaptest/sdk'\nimport React, { useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { Button, LinkExternal } from '@pancakeswap-libs/uikit'\nimport { ArrowUpCircle } from 'react-feather'\nimport { AutoColumn } from '../Column'\nimport { getBscScanLink } from '../../utils'\nimport { Wrapper, Section, ConfirmedIcon, ContentHeader } from './helpers'\nimport NewButton from '../NewButton'\n\ntype TransactionSubmittedContentProps = {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n}\n\nconst TransactionSubmittedContent = ({ onDismiss, chainId, hash }: TransactionSubmittedContentProps) => {\n  const theme = useContext(ThemeContext)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ContentHeader onDismiss={onDismiss}>Transaction submitted</ContentHeader>\n        <ConfirmedIcon>\n          <ArrowUpCircle strokeWidth={0.5} size={97} color=\"#FA9124\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"8px\" justify=\"center\">\n          {chainId && hash && (\n            <LinkExternal color=\"#FA9124\" href={getBscScanLink(chainId, hash, 'transaction')}>View on PiScan</LinkExternal>\n          )}\n          <NewButton>\n          <Button onClick={onDismiss} mt=\"20px\">\n            Close\n          </Button>\n          </NewButton>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport default TransactionSubmittedContent\n","/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Pane/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/FoldableText/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/swap/SwapRoute.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/swap/FormattedPriceImpact.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useToggle.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Modal/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SearchModal/sorting.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SearchModal/filtering.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useENSContentHash.ts",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/hooks/useOnClickOutside.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SearchModal/SortButton.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SearchModal/styleds.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SearchModal/CommonBases.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/SearchModal/CurrencyList.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/Logo/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/NumericalInput/index.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/TransactionConfirmationModal/helpers.tsx",[],"/Users/renyanduo/Coding/solidity/renyanduo/paiswap/swap-interface-v1/src/components/ListLogo/index.tsx",[],{"ruleId":"811","replacedBy":"812"},{"ruleId":"813","replacedBy":"814"},{"ruleId":"815","replacedBy":"816"},{"ruleId":"817","replacedBy":"818"},{"ruleId":"819","replacedBy":"820"},{"ruleId":"821","severity":1,"message":"822","line":5,"column":20,"nodeType":"823","messageId":"824","endLine":5,"endColumn":28},{"ruleId":"821","severity":1,"message":"825","line":6,"column":8,"nodeType":"823","messageId":"824","endLine":6,"endColumn":18},{"ruleId":"821","severity":1,"message":"826","line":21,"column":8,"nodeType":"823","messageId":"824","endLine":21,"endColumn":26},{"ruleId":"821","severity":1,"message":"827","line":25,"column":8,"nodeType":"823","messageId":"824","endLine":25,"endColumn":12},{"ruleId":"821","severity":1,"message":"828","line":88,"column":9,"nodeType":"823","messageId":"824","endLine":88,"endColumn":45},{"ruleId":"821","severity":1,"message":"829","line":6,"column":8,"nodeType":"823","messageId":"824","endLine":6,"endColumn":14},{"ruleId":"821","severity":1,"message":"830","line":11,"column":8,"nodeType":"823","messageId":"824","endLine":11,"endColumn":15},{"ruleId":"821","severity":1,"message":"831","line":113,"column":18,"nodeType":"823","messageId":"824","endLine":113,"endColumn":36},{"ruleId":"832","severity":1,"message":"833","line":122,"column":5,"nodeType":"834","messageId":"835","endLine":122,"endColumn":16},{"ruleId":"832","severity":1,"message":"833","line":159,"column":5,"nodeType":"834","messageId":"835","endLine":159,"endColumn":16},{"ruleId":"832","severity":1,"message":"833","line":175,"column":9,"nodeType":"834","messageId":"835","endLine":175,"endColumn":20},{"ruleId":"821","severity":1,"message":"829","line":2,"column":8,"nodeType":"823","messageId":"824","endLine":2,"endColumn":14},{"ruleId":"821","severity":1,"message":"830","line":6,"column":8,"nodeType":"823","messageId":"824","endLine":6,"endColumn":15},{"ruleId":"821","severity":1,"message":"836","line":10,"column":10,"nodeType":"823","messageId":"824","endLine":10,"endColumn":28},{"ruleId":"821","severity":1,"message":"837","line":21,"column":8,"nodeType":"823","messageId":"824","endLine":21,"endColumn":18},{"ruleId":"821","severity":1,"message":"838","line":4,"column":20,"nodeType":"823","messageId":"824","endLine":4,"endColumn":33},{"ruleId":"821","severity":1,"message":"829","line":5,"column":8,"nodeType":"823","messageId":"824","endLine":5,"endColumn":14},{"ruleId":"821","severity":1,"message":"830","line":12,"column":8,"nodeType":"823","messageId":"824","endLine":12,"endColumn":15},{"ruleId":"821","severity":1,"message":"839","line":17,"column":8,"nodeType":"823","messageId":"824","endLine":17,"endColumn":18},{"ruleId":"821","severity":1,"message":"840","line":24,"column":10,"nodeType":"823","messageId":"824","endLine":24,"endColumn":34},{"ruleId":"821","severity":1,"message":"837","line":38,"column":8,"nodeType":"823","messageId":"824","endLine":38,"endColumn":18},{"ruleId":"821","severity":1,"message":"841","line":292,"column":10,"nodeType":"823","messageId":"824","endLine":292,"endColumn":22},{"ruleId":"821","severity":1,"message":"842","line":292,"column":24,"nodeType":"823","messageId":"824","endLine":292,"endColumn":39},{"ruleId":"821","severity":1,"message":"843","line":8,"column":17,"nodeType":"823","messageId":"824","endLine":8,"endColumn":26},{"ruleId":"821","severity":1,"message":"844","line":21,"column":16,"nodeType":"823","messageId":"824","endLine":21,"endColumn":21},{"ruleId":"821","severity":1,"message":"845","line":22,"column":9,"nodeType":"823","messageId":"824","endLine":22,"endColumn":16},{"ruleId":"821","severity":1,"message":"846","line":28,"column":57,"nodeType":"823","messageId":"824","endLine":28,"endColumn":65},{"ruleId":"832","severity":1,"message":"833","line":32,"column":7,"nodeType":"834","messageId":"835","endLine":32,"endColumn":18},{"ruleId":"811","replacedBy":"812"},{"ruleId":"813","replacedBy":"814"},{"ruleId":"815","replacedBy":"816"},{"ruleId":"817","replacedBy":"818"},{"ruleId":"819","replacedBy":"820"},{"ruleId":"821","severity":1,"message":"844","line":14,"column":16,"nodeType":"823","messageId":"824","endLine":14,"endColumn":21},{"ruleId":"821","severity":1,"message":"847","line":5,"column":8,"nodeType":"823","messageId":"824","endLine":5,"endColumn":20},{"ruleId":"848","severity":1,"message":"849","line":45,"column":20,"nodeType":"823","messageId":"850","endLine":45,"endColumn":30},{"ruleId":"832","severity":1,"message":"833","line":47,"column":13,"nodeType":"834","messageId":"835","endLine":47,"endColumn":24},{"ruleId":"848","severity":1,"message":"851","line":55,"column":29,"nodeType":"823","messageId":"850","endLine":55,"endColumn":46},{"ruleId":"821","severity":1,"message":"852","line":68,"column":22,"nodeType":"823","messageId":"824","endLine":68,"endColumn":23},{"ruleId":"821","severity":1,"message":"853","line":20,"column":40,"nodeType":"823","messageId":"824","endLine":20,"endColumn":46},{"ruleId":"811","replacedBy":"854"},{"ruleId":"813","replacedBy":"855"},{"ruleId":"815","replacedBy":"856"},{"ruleId":"817","replacedBy":"857"},{"ruleId":"819","replacedBy":"858"},{"ruleId":"821","severity":1,"message":"859","line":4,"column":10,"nodeType":"823","messageId":"824","endLine":4,"endColumn":25},{"ruleId":"821","severity":1,"message":"860","line":16,"column":10,"nodeType":"823","messageId":"824","endLine":16,"endColumn":17},{"ruleId":"821","severity":1,"message":"861","line":18,"column":9,"nodeType":"823","messageId":"824","endLine":18,"endColumn":14},"lines-around-directive",["862"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'useModal' is defined but never used.","Identifier","unusedVar","'VersionBar' is defined but never used.","'UseV2ExchangeModal' is defined but never used.","'Menu' is defined but never used.","'fetchTranslationsForSelectedLanguage' is assigned a value but never used.","'styled' is defined but never used.","'CardNav' is defined but never used.","'onAttemptToApprove' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'StyledInternalLink' is defined but never used.","'PageHeader' is defined but never used.","'ArrowDownIcon' is defined but never used.","'TradePrice' is defined but never used.","'INITIAL_ALLOWED_SLIPPAGE' is defined but never used.","'showInverted' is assigned a value but never used.","'setShowInverted' is assigned a value but never used.","'useEffect' is defined but never used.","'props' is defined but never used.","'history' is assigned a value but never used.","'_chainId' is defined but never used.","'AudioSetting' is defined but never used.","@typescript-eslint/no-use-before-define","'initialize' was used before it was defined.","noUseBeforeDefine","'getPromiseBalance' was used before it was defined.","'e' is defined but never used.","'reject' is defined but never used.",["862"],[],[],[],[],"'TranslateString' is defined but never used.","'AutoRow' is defined but never used.","'theme' is assigned a value but never used.","padding-line-between-statements"]